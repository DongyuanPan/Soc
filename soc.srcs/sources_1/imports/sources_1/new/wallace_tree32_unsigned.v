`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2017/08/25 14:39:48
// Design Name: 
// Module Name: wallace_tree32_unsigned
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module wallace_tree32_unsigned (a, b, s);

	input [31:0] a;
	input [31:0] b;
	output [63:0] s;

	reg [31:0] p [31:0];

	integer i, j;
	always @ * begin
	for (i = 0; i < 32; i = i + 1)
		for (j = 0; j < 32; j = j + 1)
			p[i][j] = a[i] & b[j];
	end

	assign s[0] = p[0][0];

	// add-layer 1
	wire [10:0] s1[61:1];
	wire [10:0] c1[62:2];
	// index 62 : p[31][31]
	
    add1 fa1_61_0 (p[31][30], p[30][31],      1'b0, s1[61][0], c1[62][0]);

	add1 fa1_60_0 (p[31][29], p[30][30], p[29][31], s1[60][0], c1[61][0]);

	add1 fa1_59_0 (p[31][28], p[30][29], p[29][30], s1[59][0], c1[60][0]);
	// index 59 : p[28][31]

	add1 fa1_58_1 (p[31][27], p[30][28], p[29][29], s1[58][1], c1[59][1]);
	add1 fa1_58_0 (p[28][30], p[27][31],      1'b0, s1[58][0], c1[59][0]);

	add1 fa1_57_1 (p[31][26], p[30][27], p[29][28], s1[57][1], c1[58][1]);
	add1 fa1_57_0 (p[28][29], p[27][30], p[26][31], s1[57][0], c1[58][0]);

	add1 fa1_56_1 (p[31][25], p[30][26], p[29][27], s1[56][1], c1[57][1]);
	add1 fa1_56_0 (p[28][28], p[27][29], p[26][30], s1[56][0], c1[57][0]);
	// index 56 : p[25][31]

	add1 fa1_55_2 (p[31][24], p[30][25], p[29][26], s1[55][2], c1[56][2]);
	add1 fa1_55_1 (p[28][27], p[27][28], p[26][29], s1[55][1], c1[56][1]);
	add1 fa1_55_0 (p[25][30], p[24][31],      1'b0, s1[55][0], c1[56][0]);

	add1 fa1_54_2 (p[31][23], p[30][24], p[29][25], s1[54][2], c1[55][2]);
	add1 fa1_54_1 (p[28][26], p[27][27], p[26][28], s1[54][1], c1[55][1]);
	add1 fa1_54_0 (p[25][29], p[24][30], p[23][31], s1[54][0], c1[55][0]);

	add1 fa1_53_2 (p[31][22], p[30][23], p[29][24], s1[53][2], c1[54][2]);
	add1 fa1_53_1 (p[28][25], p[27][26], p[26][27], s1[53][1], c1[54][1]);
	add1 fa1_53_0 (p[25][28], p[24][29], p[23][30], s1[53][0], c1[54][0]);
	// index 53 : p[22][31]

	add1 fa1_52_3 (p[31][21], p[30][22], p[29][23], s1[52][3], c1[53][3]);
	add1 fa1_52_2 (p[28][24], p[27][25], p[26][26], s1[52][2], c1[53][2]);
	add1 fa1_52_1 (p[25][27], p[24][28], p[23][29], s1[52][1], c1[53][1]);
	add1 fa1_52_0 (p[22][30], p[21][31],      1'b0, s1[52][0], c1[53][0]);

	add1 fa1_51_3 (p[31][20], p[30][21], p[29][22], s1[51][3], c1[52][3]);
	add1 fa1_51_2 (p[28][23], p[27][24], p[26][25], s1[51][2], c1[52][2]);
	add1 fa1_51_1 (p[25][26], p[24][27], p[23][28], s1[51][1], c1[52][1]);
	add1 fa1_51_0 (p[22][29], p[21][30], p[20][31], s1[51][0], c1[52][0]);

	add1 fa1_50_3 (p[31][19], p[30][20], p[29][21], s1[50][3], c1[51][3]);
	add1 fa1_50_2 (p[28][22], p[27][23], p[26][24], s1[50][2], c1[51][2]);
	add1 fa1_50_1 (p[25][25], p[24][26], p[23][27], s1[50][1], c1[51][1]);
	add1 fa1_50_0 (p[22][28], p[21][29], p[20][30], s1[50][0], c1[51][0]);
	// index 50 : p[19][31]

	add1 fa1_49_4 (p[31][18], p[30][19], p[29][20], s1[49][4], c1[50][4]);
	add1 fa1_49_3 (p[28][21], p[27][22], p[26][23], s1[49][3], c1[50][3]);
	add1 fa1_49_2 (p[25][24], p[24][25], p[23][26], s1[49][2], c1[50][2]);
	add1 fa1_49_1 (p[22][27], p[21][28], p[20][29], s1[49][1], c1[50][1]);
	add1 fa1_49_0 (p[19][30], p[18][31],      1'b0, s1[49][0], c1[50][0]);

	add1 fa1_48_4 (p[31][17], p[30][18], p[29][19], s1[48][4], c1[49][4]);
	add1 fa1_48_3 (p[28][20], p[27][21], p[26][22], s1[48][3], c1[49][3]);
	add1 fa1_48_2 (p[25][23], p[24][24], p[23][25], s1[48][2], c1[49][2]);
	add1 fa1_48_1 (p[22][26], p[21][27], p[20][28], s1[48][1], c1[49][1]);
	add1 fa1_48_0 (p[19][29], p[18][30], p[17][31], s1[48][0], c1[49][0]);

	add1 fa1_47_4 (p[31][16], p[30][17], p[29][18], s1[47][4], c1[48][4]);
	add1 fa1_47_3 (p[28][19], p[27][20], p[26][21], s1[47][3], c1[48][3]);
	add1 fa1_47_2 (p[25][22], p[24][23], p[23][24], s1[47][2], c1[48][2]);
	add1 fa1_47_1 (p[22][25], p[21][26], p[20][27], s1[47][1], c1[48][1]);
	add1 fa1_47_0 (p[19][28], p[18][29], p[17][30], s1[47][0], c1[48][0]);
	// index 47 : p[16][31]

	add1 fa1_46_5 (p[31][15], p[30][16], p[29][17], s1[46][5], c1[47][5]);
	add1 fa1_46_4 (p[28][18], p[27][19], p[26][20], s1[46][4], c1[47][4]);
	add1 fa1_46_3 (p[25][21], p[24][22], p[23][23], s1[46][3], c1[47][3]);
	add1 fa1_46_2 (p[22][24], p[21][25], p[20][26], s1[46][2], c1[47][2]);
	add1 fa1_46_1 (p[19][27], p[18][28], p[17][29], s1[46][1], c1[47][1]);
	add1 fa1_46_0 (p[16][30], p[15][31],      1'b0, s1[46][0], c1[47][0]);

	add1 fa1_45_5 (p[31][14], p[30][15], p[29][16], s1[45][5], c1[46][5]);
	add1 fa1_45_4 (p[28][17], p[27][18], p[26][19], s1[45][4], c1[46][4]);
	add1 fa1_45_3 (p[25][20], p[24][21], p[23][22], s1[45][3], c1[46][3]);
	add1 fa1_45_2 (p[22][23], p[21][24], p[20][25], s1[45][2], c1[46][2]);
	add1 fa1_45_1 (p[19][26], p[18][27], p[17][28], s1[45][1], c1[46][1]);
	add1 fa1_45_0 (p[16][29], p[15][30], p[14][31], s1[45][0], c1[46][0]);

	add1 fa1_44_5 (p[31][13], p[30][14], p[29][15], s1[44][5], c1[45][5]);
	add1 fa1_44_4 (p[28][16], p[27][17], p[26][18], s1[44][4], c1[45][4]);
	add1 fa1_44_3 (p[25][19], p[24][20], p[23][21], s1[44][3], c1[45][3]);
	add1 fa1_44_2 (p[22][22], p[21][23], p[20][24], s1[44][2], c1[45][2]);
	add1 fa1_44_1 (p[19][25], p[18][26], p[17][27], s1[44][1], c1[45][1]);
	add1 fa1_44_0 (p[16][28], p[15][29], p[14][30], s1[44][0], c1[45][0]);
	// index 44 : p[13][31]

	add1 fa1_43_6 (p[31][12], p[30][13], p[29][14], s1[43][6], c1[44][6]);
	add1 fa1_43_5 (p[28][15], p[27][16], p[26][17], s1[43][5], c1[44][5]);
	add1 fa1_43_4 (p[25][18], p[24][19], p[23][20], s1[43][4], c1[44][4]);
	add1 fa1_43_3 (p[22][21], p[21][22], p[20][23], s1[43][3], c1[44][3]);
	add1 fa1_43_2 (p[19][24], p[18][25], p[17][26], s1[43][2], c1[44][2]);
	add1 fa1_43_1 (p[16][27], p[15][28], p[14][29], s1[43][1], c1[44][1]);
	add1 fa1_43_0 (p[13][30], p[12][31],      1'b0, s1[43][0], c1[44][0]);

	add1 fa1_42_6 (p[31][11], p[30][12], p[29][13], s1[42][6], c1[43][6]);
	add1 fa1_42_5 (p[28][14], p[27][15], p[26][16], s1[42][5], c1[43][5]);
	add1 fa1_42_4 (p[25][17], p[24][18], p[23][19], s1[42][4], c1[43][4]);
	add1 fa1_42_3 (p[22][20], p[21][21], p[20][22], s1[42][3], c1[43][3]);
	add1 fa1_42_2 (p[19][23], p[18][24], p[17][25], s1[42][2], c1[43][2]);
	add1 fa1_42_1 (p[16][26], p[15][27], p[14][28], s1[42][1], c1[43][1]);
	add1 fa1_42_0 (p[13][29], p[12][30], p[11][31], s1[42][0], c1[43][0]);

	add1 fa1_41_6 (p[31][10], p[30][11], p[29][12], s1[41][6], c1[42][6]);
	add1 fa1_41_5 (p[28][13], p[27][14], p[26][15], s1[41][5], c1[42][5]);
	add1 fa1_41_4 (p[25][16], p[24][17], p[23][18], s1[41][4], c1[42][4]);
	add1 fa1_41_3 (p[22][19], p[21][20], p[20][21], s1[41][3], c1[42][3]);
	add1 fa1_41_2 (p[19][22], p[18][23], p[17][24], s1[41][2], c1[42][2]);
	add1 fa1_41_1 (p[16][25], p[15][26], p[14][27], s1[41][1], c1[42][1]);
	add1 fa1_41_0 (p[13][28], p[12][29], p[11][30], s1[41][0], c1[42][0]);
	// index 41 : p[10][31]

	add1 fa1_40_7 (p[31][9], p[30][10], p[29][11], s1[40][7], c1[41][7]);
	add1 fa1_40_6 (p[28][12], p[27][13], p[26][14], s1[40][6], c1[41][6]);
	add1 fa1_40_5 (p[25][15], p[24][16], p[23][17], s1[40][5], c1[41][5]);
	add1 fa1_40_4 (p[22][18], p[21][19], p[20][20], s1[40][4], c1[41][4]);
	add1 fa1_40_3 (p[19][21], p[18][22], p[17][23], s1[40][3], c1[41][3]);
	add1 fa1_40_2 (p[16][24], p[15][25], p[14][26], s1[40][2], c1[41][2]);
	add1 fa1_40_1 (p[13][27], p[12][28], p[11][29], s1[40][1], c1[41][1]);
	add1 fa1_40_0 (p[10][30], p[9][31],      1'b0, s1[40][0], c1[41][0]);

	add1 fa1_39_7 (p[31][08], p[30][09], p[29][10], s1[39][7], c1[40][7]);
	add1 fa1_39_6 (p[28][11], p[27][12], p[26][13], s1[39][6], c1[40][6]);
	add1 fa1_39_5 (p[25][14], p[24][15], p[23][16], s1[39][5], c1[40][5]);
	add1 fa1_39_4 (p[22][17], p[21][18], p[20][19], s1[39][4], c1[40][4]);
	add1 fa1_39_3 (p[19][20], p[18][21], p[17][22], s1[39][3], c1[40][3]);
	add1 fa1_39_2 (p[16][23], p[15][24], p[14][25], s1[39][2], c1[40][2]);
	add1 fa1_39_1 (p[13][26], p[12][27], p[11][28], s1[39][1], c1[40][1]);
	add1 fa1_39_0 (p[10][29], p[09][30], p[08][31], s1[39][0], c1[40][0]);

	add1 fa1_38_7 (p[31][7], p[30][8], p[29][9], s1[38][7], c1[39][7]);
	add1 fa1_38_6 (p[28][10], p[27][11], p[26][12], s1[38][6], c1[39][6]);
	add1 fa1_38_5 (p[25][13], p[24][14], p[23][15], s1[38][5], c1[39][5]);
	add1 fa1_38_4 (p[22][16], p[21][17], p[20][18], s1[38][4], c1[39][4]);
	add1 fa1_38_3 (p[19][19], p[18][20], p[17][21], s1[38][3], c1[39][3]);
	add1 fa1_38_2 (p[16][22], p[15][23], p[14][24], s1[38][2], c1[39][2]);
	add1 fa1_38_1 (p[13][25], p[12][26], p[11][27], s1[38][1], c1[39][1]);
	add1 fa1_38_0 (p[10][28], p[9][29], p[8][30], s1[38][0], c1[39][0]);
	// index 38 : p[7][31]

	add1 fa1_37_8 (p[31][6], p[30][7], p[29][8], s1[37][8], c1[38][8]);
	add1 fa1_37_7 (p[28][9], p[27][10], p[26][11], s1[37][7], c1[38][7]);
	add1 fa1_37_6 (p[25][12], p[24][13], p[23][14], s1[37][6], c1[38][6]);
	add1 fa1_37_5 (p[22][15], p[21][16], p[20][17], s1[37][5], c1[38][5]);
	add1 fa1_37_4 (p[19][18], p[18][19], p[17][20], s1[37][4], c1[38][4]);
	add1 fa1_37_3 (p[16][21], p[15][22], p[14][23], s1[37][3], c1[38][3]);
	add1 fa1_37_2 (p[13][24], p[12][25], p[11][26], s1[37][2], c1[38][2]);
	add1 fa1_37_1 (p[10][27], p[9][28], p[8][29], s1[37][1], c1[38][1]);
	add1 fa1_37_0 (p[7][30], p[6][31],      1'b0, s1[37][0], c1[38][0]);

	add1 fa1_36_8 (p[31][5], p[30][6], p[29][7], s1[36][8], c1[37][8]);
	add1 fa1_36_7 (p[28][8], p[27][9], p[26][10], s1[36][7], c1[37][7]);
	add1 fa1_36_6 (p[25][11], p[24][12], p[23][13], s1[36][6], c1[37][6]);
	add1 fa1_36_5 (p[22][14], p[21][15], p[20][16], s1[36][5], c1[37][5]);
	add1 fa1_36_4 (p[19][17], p[18][18], p[17][19], s1[36][4], c1[37][4]);
	add1 fa1_36_3 (p[16][20], p[15][21], p[14][22], s1[36][3], c1[37][3]);
	add1 fa1_36_2 (p[13][23], p[12][24], p[11][25], s1[36][2], c1[37][2]);
	add1 fa1_36_1 (p[10][26], p[9][27], p[8][28], s1[36][1], c1[37][1]);
	add1 fa1_36_0 (p[7][29], p[6][30], p[5][31], s1[36][0], c1[37][0]);

	add1 fa1_35_8 (p[31][4], p[30][5], p[29][6], s1[35][8], c1[36][8]);
	add1 fa1_35_7 (p[28][7], p[27][8], p[26][9], s1[35][7], c1[36][7]);
	add1 fa1_35_6 (p[25][10], p[24][11], p[23][12], s1[35][6], c1[36][6]);
	add1 fa1_35_5 (p[22][13], p[21][14], p[20][15], s1[35][5], c1[36][5]);
	add1 fa1_35_4 (p[19][16], p[18][17], p[17][18], s1[35][4], c1[36][4]);
	add1 fa1_35_3 (p[16][19], p[15][20], p[14][21], s1[35][3], c1[36][3]);
	add1 fa1_35_2 (p[13][22], p[12][23], p[11][24], s1[35][2], c1[36][2]);
	add1 fa1_35_1 (p[10][25], p[9][26], p[8][27], s1[35][1], c1[36][1]);
	add1 fa1_35_0 (p[7][28], p[6][29], p[5][30], s1[35][0], c1[36][0]);
	// index 35 : p[4][31]

	add1 fa1_34_9 (p[31][3], p[30][4], p[29][5], s1[34][9], c1[35][9]);
	add1 fa1_34_8 (p[28][6], p[27][7], p[26][8], s1[34][8], c1[35][8]);
	add1 fa1_34_7 (p[25][9], p[24][10], p[23][11], s1[34][7], c1[35][7]);
	add1 fa1_34_6 (p[22][12], p[21][13], p[20][14], s1[34][6], c1[35][6]);
	add1 fa1_34_5 (p[19][15], p[18][16], p[17][17], s1[34][5], c1[35][5]);
	add1 fa1_34_4 (p[16][18], p[15][19], p[14][20], s1[34][4], c1[35][4]);
	add1 fa1_34_3 (p[13][21], p[12][22], p[11][23], s1[34][3], c1[35][3]);
	add1 fa1_34_2 (p[10][24], p[9][25], p[8][26], s1[34][2], c1[35][2]);
	add1 fa1_34_1 (p[7][27], p[6][28], p[5][29], s1[34][1], c1[35][1]);
	add1 fa1_34_0 (p[4][30], p[3][31],      1'b0, s1[34][0], c1[35][0]);

	add1 fa1_33_9 (p[31][2], p[30][3], p[29][4], s1[33][9], c1[34][9]);
	add1 fa1_33_8 (p[28][5], p[27][6], p[26][7], s1[33][8], c1[34][8]);
	add1 fa1_33_7 (p[25][8], p[24][9], p[23][10], s1[33][7], c1[34][7]);
	add1 fa1_33_6 (p[22][11], p[21][12], p[20][13], s1[33][6], c1[34][6]);
	add1 fa1_33_5 (p[19][14], p[18][15], p[17][16], s1[33][5], c1[34][5]);
	add1 fa1_33_4 (p[16][17], p[15][18], p[14][19], s1[33][4], c1[34][4]);
	add1 fa1_33_3 (p[13][20], p[12][21], p[11][22], s1[33][3], c1[34][3]);
	add1 fa1_33_2 (p[10][23], p[9][24], p[8][25], s1[33][2], c1[34][2]);
	add1 fa1_33_1 (p[7][26], p[6][27], p[5][28], s1[33][1], c1[34][1]);
	add1 fa1_33_0 (p[4][29], p[3][30], p[2][31], s1[33][0], c1[34][0]);

	add1 fa1_32_9 (p[31][1], p[30][2], p[29][3], s1[32][9], c1[33][9]);
	add1 fa1_32_8 (p[28][4], p[27][5], p[26][6], s1[32][8], c1[33][8]);
	add1 fa1_32_7 (p[25][7], p[24][8], p[23][9], s1[32][7], c1[33][7]);
	add1 fa1_32_6 (p[22][10], p[21][11], p[20][12], s1[32][6], c1[33][6]);
	add1 fa1_32_5 (p[19][13], p[18][14], p[17][15], s1[32][5], c1[33][5]);
	add1 fa1_32_4 (p[16][16], p[15][17], p[14][18], s1[32][4], c1[33][4]);
	add1 fa1_32_3 (p[13][19], p[12][20], p[11][21], s1[32][3], c1[33][3]);
	add1 fa1_32_2 (p[10][22], p[9][23], p[8][24], s1[32][2], c1[33][2]);
	add1 fa1_32_1 (p[7][25], p[6][26], p[5][27], s1[32][1], c1[33][1]);
	add1 fa1_32_0 (p[4][28], p[3][29], p[2][30], s1[32][0], c1[33][0]);
	// index 32 : p[1][31]

	add1 fa1_31_10 (p[31][0], p[30][1], p[29][2], s1[31][10], c1[32][10]);
	add1 fa1_31_9 (p[28][3], p[27][4], p[26][5], s1[31][9], c1[32][9]);
	add1 fa1_31_8 (p[25][6], p[24][7], p[23][8], s1[31][8], c1[32][8]);
	add1 fa1_31_7 (p[22][9], p[21][10], p[20][11], s1[31][7], c1[32][7]);
	add1 fa1_31_6 (p[19][12], p[18][13], p[17][14], s1[31][6], c1[32][6]);
	add1 fa1_31_5 (p[16][15], p[15][16], p[14][17], s1[31][5], c1[32][5]);
	add1 fa1_31_4 (p[13][18], p[12][19], p[11][20], s1[31][4], c1[32][4]);
	add1 fa1_31_3 (p[10][21], p[9][22], p[8][23], s1[31][3], c1[32][3]);
	add1 fa1_31_2 (p[7][24], p[6][25], p[5][26], s1[31][2], c1[32][2]);
	add1 fa1_31_1 (p[4][27], p[3][28], p[2][29], s1[31][1], c1[32][1]);
	add1 fa1_31_0 (p[1][30], p[0][31],      1'b0, s1[31][0], c1[32][0]);

	add1 fa1_30_9 (p[30][0], p[29][1], p[28][2], s1[30][9], c1[31][9]);
	add1 fa1_30_8 (p[27][3], p[26][4], p[25][5], s1[30][8], c1[31][8]);
	add1 fa1_30_7 (p[24][6], p[23][7], p[22][8], s1[30][7], c1[31][7]);
	add1 fa1_30_6 (p[21][9], p[20][10], p[19][11], s1[30][6], c1[31][6]);
	add1 fa1_30_5 (p[18][12], p[17][13], p[16][14], s1[30][5], c1[31][5]);
	add1 fa1_30_4 (p[15][15], p[14][16], p[13][17], s1[30][4], c1[31][4]);
	add1 fa1_30_3 (p[12][18], p[11][19], p[10][20], s1[30][3], c1[31][3]);
	add1 fa1_30_2 (p[9][21], p[8][22], p[7][23], s1[30][2], c1[31][2]);
	add1 fa1_30_1 (p[6][24], p[5][25], p[4][26], s1[30][1], c1[31][1]);
	add1 fa1_30_0 (p[3][27], p[2][28], p[1][29], s1[30][0], c1[31][0]);
	// index 30 : p[0][30]

	add1 fa1_29_9 (p[29][0], p[28][1], p[27][2], s1[29][9], c1[30][9]);
	add1 fa1_29_8 (p[26][3], p[25][4], p[24][5], s1[29][8], c1[30][8]);
	add1 fa1_29_7 (p[23][6], p[22][7], p[21][8], s1[29][7], c1[30][7]);
	add1 fa1_29_6 (p[20][9], p[19][10], p[18][11], s1[29][6], c1[30][6]);
	add1 fa1_29_5 (p[17][12], p[16][13], p[15][14], s1[29][5], c1[30][5]);
	add1 fa1_29_4 (p[14][15], p[13][16], p[12][17], s1[29][4], c1[30][4]);
	add1 fa1_29_3 (p[11][18], p[10][19], p[9][20], s1[29][3], c1[30][3]);
	add1 fa1_29_2 (p[8][21], p[7][22], p[6][23], s1[29][2], c1[30][2]);
	add1 fa1_29_1 (p[5][24], p[4][25], p[3][26], s1[29][1], c1[30][1]);
	add1 fa1_29_0 (p[2][27], p[1][28], p[0][29], s1[29][0], c1[30][0]);

	add1 fa1_28_9 (p[28][0], p[27][1], p[26][2], s1[28][9], c1[29][9]);
	add1 fa1_28_8 (p[25][3], p[24][4], p[23][5], s1[28][8], c1[29][8]);
	add1 fa1_28_7 (p[22][6], p[21][7], p[20][8], s1[28][7], c1[29][7]);
	add1 fa1_28_6 (p[19][9], p[18][10], p[17][11], s1[28][6], c1[29][6]);
	add1 fa1_28_5 (p[16][12], p[15][13], p[14][14], s1[28][5], c1[29][5]);
	add1 fa1_28_4 (p[13][15], p[12][16], p[11][17], s1[28][4], c1[29][4]);
	add1 fa1_28_3 (p[10][18], p[9][19], p[8][20], s1[28][3], c1[29][3]);
	add1 fa1_28_2 (p[7][21], p[6][22], p[5][23], s1[28][2], c1[29][2]);
	add1 fa1_28_1 (p[4][24], p[3][25], p[2][26], s1[28][1], c1[29][1]);
	add1 fa1_28_0 (p[1][27], p[0][28],      1'b0, s1[28][0], c1[29][0]);

	add1 fa1_27_8 (p[27][0], p[26][1], p[25][2], s1[27][8], c1[28][8]);
	add1 fa1_27_7 (p[24][3], p[23][4], p[22][5], s1[27][7], c1[28][7]);
	add1 fa1_27_6 (p[21][6], p[20][7], p[19][8], s1[27][6], c1[28][6]);
	add1 fa1_27_5 (p[18][9], p[17][10], p[16][11], s1[27][5], c1[28][5]);
	add1 fa1_27_4 (p[15][12], p[14][13], p[13][14], s1[27][4], c1[28][4]);
	add1 fa1_27_3 (p[12][15], p[11][16], p[10][17], s1[27][3], c1[28][3]);
	add1 fa1_27_2 (p[9][18], p[8][19], p[7][20], s1[27][2], c1[28][2]);
	add1 fa1_27_1 (p[6][21], p[5][22], p[4][23], s1[27][1], c1[28][1]);
	add1 fa1_27_0 (p[3][24], p[2][25], p[1][26], s1[27][0], c1[28][0]);
	// index 27 : p[0][27]

	add1 fa1_26_8 (p[26][0], p[25][1], p[24][2], s1[26][8], c1[27][8]);
	add1 fa1_26_7 (p[23][3], p[22][4], p[21][5], s1[26][7], c1[27][7]);
	add1 fa1_26_6 (p[20][6], p[19][7], p[18][8], s1[26][6], c1[27][6]);
	add1 fa1_26_5 (p[17][9], p[16][10], p[15][11], s1[26][5], c1[27][5]);
	add1 fa1_26_4 (p[14][12], p[13][13], p[12][14], s1[26][4], c1[27][4]);
	add1 fa1_26_3 (p[11][15], p[10][16], p[9][17], s1[26][3], c1[27][3]);
	add1 fa1_26_2 (p[8][18], p[7][19], p[6][20], s1[26][2], c1[27][2]);
	add1 fa1_26_1 (p[5][21], p[4][22], p[3][23], s1[26][1], c1[27][1]);
	add1 fa1_26_0 (p[2][24], p[1][25], p[0][26], s1[26][0], c1[27][0]);

	add1 fa1_25_8 (p[25][0], p[24][1], p[23][2], s1[25][8], c1[26][8]);
	add1 fa1_25_7 (p[22][3], p[21][4], p[20][5], s1[25][7], c1[26][7]);
	add1 fa1_25_6 (p[19][6], p[18][7], p[17][8], s1[25][6], c1[26][6]);
	add1 fa1_25_5 (p[16][9], p[15][10], p[14][11], s1[25][5], c1[26][5]);
	add1 fa1_25_4 (p[13][12], p[12][13], p[11][14], s1[25][4], c1[26][4]);
	add1 fa1_25_3 (p[10][15], p[9][16], p[8][17], s1[25][3], c1[26][3]);
	add1 fa1_25_2 (p[7][18], p[6][19], p[5][20], s1[25][2], c1[26][2]);
	add1 fa1_25_1 (p[4][21], p[3][22], p[2][23], s1[25][1], c1[26][1]);
	add1 fa1_25_0 (p[1][24], p[0][25],      1'b0, s1[25][0], c1[26][0]);

	add1 fa1_24_7 (p[24][0], p[23][1], p[22][2], s1[24][7], c1[25][7]);
	add1 fa1_24_6 (p[21][3], p[20][4], p[19][5], s1[24][6], c1[25][6]);
	add1 fa1_24_5 (p[18][6], p[17][7], p[16][8], s1[24][5], c1[25][5]);
	add1 fa1_24_4 (p[15][9], p[14][10], p[13][11], s1[24][4], c1[25][4]);
	add1 fa1_24_3 (p[12][12], p[11][13], p[10][14], s1[24][3], c1[25][3]);
	add1 fa1_24_2 (p[9][15], p[8][16], p[7][17], s1[24][2], c1[25][2]);
	add1 fa1_24_1 (p[6][18], p[5][19], p[4][20], s1[24][1], c1[25][1]);
	add1 fa1_24_0 (p[3][21], p[2][22], p[1][23], s1[24][0], c1[25][0]);
	// index 24 : p[0][24]

	add1 fa1_23_7 (p[23][0], p[22][1], p[21][2], s1[23][7], c1[24][7]);
	add1 fa1_23_6 (p[20][3], p[19][4], p[18][5], s1[23][6], c1[24][6]);
	add1 fa1_23_5 (p[17][6], p[16][7], p[15][8], s1[23][5], c1[24][5]);
	add1 fa1_23_4 (p[14][9], p[13][10], p[12][11], s1[23][4], c1[24][4]);
	add1 fa1_23_3 (p[11][12], p[10][13], p[9][14], s1[23][3], c1[24][3]);
	add1 fa1_23_2 (p[8][15], p[7][16], p[6][17], s1[23][2], c1[24][2]);
	add1 fa1_23_1 (p[5][18], p[4][19], p[3][20], s1[23][1], c1[24][1]);
	add1 fa1_23_0 (p[2][21], p[1][22], p[0][23], s1[23][0], c1[24][0]);

	add1 fa1_22_7 (p[22][0], p[21][1], p[20][2], s1[22][7], c1[23][7]);
	add1 fa1_22_6 (p[19][3], p[18][4], p[17][5], s1[22][6], c1[23][6]);
	add1 fa1_22_5 (p[16][6], p[15][7], p[14][8], s1[22][5], c1[23][5]);
	add1 fa1_22_4 (p[13][9], p[12][10], p[11][11], s1[22][4], c1[23][4]);
	add1 fa1_22_3 (p[10][12], p[9][13], p[8][14], s1[22][3], c1[23][3]);
	add1 fa1_22_2 (p[7][15], p[6][16], p[5][17], s1[22][2], c1[23][2]);
	add1 fa1_22_1 (p[4][18], p[3][19], p[2][20], s1[22][1], c1[23][1]);
	add1 fa1_22_0 (p[1][21], p[0][22],      1'b0, s1[22][0], c1[23][0]);

	add1 fa1_21_6 (p[21][0], p[20][1], p[19][2], s1[21][6], c1[22][6]);
	add1 fa1_21_5 (p[18][3], p[17][4], p[16][5], s1[21][5], c1[22][5]);
	add1 fa1_21_4 (p[15][6], p[14][7], p[13][8], s1[21][4], c1[22][4]);
	add1 fa1_21_3 (p[12][9], p[11][10], p[10][11], s1[21][3], c1[22][3]);
	add1 fa1_21_2 (p[9][12], p[8][13], p[7][14], s1[21][2], c1[22][2]);
	add1 fa1_21_1 (p[6][15], p[5][16], p[4][17], s1[21][1], c1[22][1]);
	add1 fa1_21_0 (p[3][18], p[2][19], p[1][20], s1[21][0], c1[22][0]);
	// index 21 : p[0][21]

	add1 fa1_20_6 (p[20][0], p[19][1], p[18][2], s1[20][6], c1[21][6]);
	add1 fa1_20_5 (p[17][3], p[16][4], p[15][5], s1[20][5], c1[21][5]);
	add1 fa1_20_4 (p[14][6], p[13][7], p[12][8], s1[20][4], c1[21][4]);
	add1 fa1_20_3 (p[11][9], p[10][10], p[9][11], s1[20][3], c1[21][3]);
	add1 fa1_20_2 (p[8][12], p[7][13], p[6][14], s1[20][2], c1[21][2]);
	add1 fa1_20_1 (p[5][15], p[4][16], p[3][17], s1[20][1], c1[21][1]);
	add1 fa1_20_0 (p[2][18], p[1][19], p[0][20], s1[20][0], c1[21][0]);

	add1 fa1_19_6 (p[19][0], p[18][1], p[17][2], s1[19][6], c1[20][6]);
	add1 fa1_19_5 (p[16][3], p[15][4], p[14][5], s1[19][5], c1[20][5]);
	add1 fa1_19_4 (p[13][6], p[12][7], p[11][8], s1[19][4], c1[20][4]);
	add1 fa1_19_3 (p[10][9], p[9][10], p[8][11], s1[19][3], c1[20][3]);
	add1 fa1_19_2 (p[7][12], p[6][13], p[5][14], s1[19][2], c1[20][2]);
	add1 fa1_19_1 (p[4][15], p[3][16], p[2][17], s1[19][1], c1[20][1]);
	add1 fa1_19_0 (p[1][18], p[0][19],      1'b0, s1[19][0], c1[20][0]);

	add1 fa1_18_5 (p[18][0], p[17][1], p[16][2], s1[18][5], c1[19][5]);
	add1 fa1_18_4 (p[15][3], p[14][4], p[13][5], s1[18][4], c1[19][4]);
	add1 fa1_18_3 (p[12][6], p[11][7], p[10][8], s1[18][3], c1[19][3]);
	add1 fa1_18_2 (p[9][9], p[8][10], p[7][11], s1[18][2], c1[19][2]);
	add1 fa1_18_1 (p[6][12], p[5][13], p[4][14], s1[18][1], c1[19][1]);
	add1 fa1_18_0 (p[3][15], p[2][16], p[1][17], s1[18][0], c1[19][0]);
	// index 18 : p[0][18]

	add1 fa1_17_5 (p[17][0], p[16][1], p[15][2], s1[17][5], c1[18][5]);
	add1 fa1_17_4 (p[14][3], p[13][4], p[12][5], s1[17][4], c1[18][4]);
	add1 fa1_17_3 (p[11][6], p[10][7], p[9][8], s1[17][3], c1[18][3]);
	add1 fa1_17_2 (p[8][9], p[7][10], p[6][11], s1[17][2], c1[18][2]);
	add1 fa1_17_1 (p[5][12], p[4][13], p[3][14], s1[17][1], c1[18][1]);
	add1 fa1_17_0 (p[2][15], p[1][16], p[0][17], s1[17][0], c1[18][0]);

	add1 fa1_16_5 (p[16][0], p[15][1], p[14][2], s1[16][5], c1[17][5]);
	add1 fa1_16_4 (p[13][3], p[12][4], p[11][5], s1[16][4], c1[17][4]);
	add1 fa1_16_3 (p[10][6], p[9][7], p[8][8], s1[16][3], c1[17][3]);
	add1 fa1_16_2 (p[7][9], p[6][10], p[5][11], s1[16][2], c1[17][2]);
	add1 fa1_16_1 (p[4][12], p[3][13], p[2][14], s1[16][1], c1[17][1]);
	add1 fa1_16_0 (p[1][15], p[0][16],      1'b0, s1[16][0], c1[17][0]);

	add1 fa1_15_4 (p[15][0], p[14][1], p[13][2], s1[15][4], c1[16][4]);
	add1 fa1_15_3 (p[12][3], p[11][4], p[10][5], s1[15][3], c1[16][3]);
	add1 fa1_15_2 (p[9][6], p[8][7], p[7][8], s1[15][2], c1[16][2]);
	add1 fa1_15_1 (p[6][9], p[5][10], p[4][11], s1[15][1], c1[16][1]);
	add1 fa1_15_0 (p[3][12], p[2][13], p[1][14], s1[15][0], c1[16][0]);
	// index 15 : p[0][15]

	add1 fa1_14_4 (p[14][0], p[13][1], p[12][2], s1[14][4], c1[15][4]);
	add1 fa1_14_3 (p[11][3], p[10][4], p[9][5], s1[14][3], c1[15][3]);
	add1 fa1_14_2 (p[8][6], p[7][7], p[6][8], s1[14][2], c1[15][2]);
	add1 fa1_14_1 (p[5][9], p[4][10], p[3][11], s1[14][1], c1[15][1]);
	add1 fa1_14_0 (p[2][12], p[1][13], p[0][14], s1[14][0], c1[15][0]);

	add1 fa1_13_4 (p[13][0], p[12][1], p[11][2], s1[13][4], c1[14][4]);
	add1 fa1_13_3 (p[10][3], p[9][4], p[8][5], s1[13][3], c1[14][3]);
	add1 fa1_13_2 (p[7][6], p[6][7], p[5][8], s1[13][2], c1[14][2]);
	add1 fa1_13_1 (p[4][9], p[3][10], p[2][11], s1[13][1], c1[14][1]);
	add1 fa1_13_0 (p[1][12], p[0][13],      1'b0, s1[13][0], c1[14][0]);

	add1 fa1_12_3 (p[12][0], p[11][1], p[10][2], s1[12][3], c1[13][3]);
	add1 fa1_12_2 (p[9][3], p[8][4], p[7][5], s1[12][2], c1[13][2]);
	add1 fa1_12_1 (p[6][6], p[5][7], p[4][8], s1[12][1], c1[13][1]);
	add1 fa1_12_0 (p[3][9], p[2][10], p[1][11], s1[12][0], c1[13][0]);
	// index 12 : p[0][12]

	add1 fa1_11_3 (p[11][0], p[10][1], p[9][2], s1[11][3], c1[12][3]);
	add1 fa1_11_2 (p[8][3], p[7][4], p[6][5], s1[11][2], c1[12][2]);
	add1 fa1_11_1 (p[5][6], p[4][7], p[3][8], s1[11][1], c1[12][1]);
	add1 fa1_11_0 (p[2][9], p[1][10], p[0][11], s1[11][0], c1[12][0]);

	add1 fa1_10_3 (p[10][0], p[9][1], p[8][2], s1[10][3], c1[11][3]);
	add1 fa1_10_2 (p[7][3], p[6][4], p[5][5], s1[10][2], c1[11][2]);
	add1 fa1_10_1 (p[4][6], p[3][7], p[2][8], s1[10][1], c1[11][1]);
	add1 fa1_10_0 (p[1][9], p[0][10],      1'b0, s1[10][0], c1[11][0]);

	add1 fa1_9_2 (p[9][0], p[8][1], p[7][2], s1[9][2], c1[10][2]);
	add1 fa1_9_1 (p[6][3], p[5][4], p[4][5], s1[9][1], c1[10][1]);
	add1 fa1_9_0 (p[3][6], p[2][7], p[1][8], s1[9][0], c1[10][0]);
	// index 9 : p[0][9]

	add1 fa1_8_2 (p[8][0], p[7][1], p[6][2], s1[8][2], c1[9][2]);
	add1 fa1_8_1 (p[5][3], p[4][4], p[3][5], s1[8][1], c1[9][1]);
	add1 fa1_8_0 (p[2][6], p[1][7], p[0][8], s1[8][0], c1[9][0]);

	add1 fa1_7_2 (p[7][0], p[6][1], p[5][2], s1[7][2], c1[8][2]);
	add1 fa1_7_1 (p[4][3], p[3][4], p[2][5], s1[7][1], c1[8][1]);
	add1 fa1_7_0 (p[1][6], p[0][7],      1'b0, s1[7][0], c1[8][0]);

	add1 fa1_6_1 (p[6][0], p[5][1], p[4][2], s1[6][1], c1[7][1]);
	add1 fa1_6_0 (p[3][3], p[2][4], p[1][5], s1[6][0], c1[7][0]);
	// index 6 : p[0][6]

	add1 fa1_5_1 (p[5][0], p[4][1], p[3][2], s1[5][1], c1[6][1]);
	add1 fa1_5_0 (p[2][3], p[1][4], p[0][5], s1[5][0], c1[6][0]);

	add1 fa1_4_1 (p[4][0], p[3][1], p[2][2], s1[4][1], c1[5][1]);
	add1 fa1_4_0 (p[1][3], p[0][4],      1'b0, s1[4][0], c1[5][0]);

	add1 fa1_3_0 (p[3][0], p[2][1], p[1][2], s1[3][0], c1[4][0]);
	// index 3 : p[0][3]

	add1 fa1_2_0 (p[2][0], p[1][1], p[0][2], s1[2][0], c1[3][0]);

	add1 fa1_1_0 (p[1][0], p[0][1],      1'b0, s1[1][0], c1[2][0]);

	assign s[1] = s1[1][0];

	// add-layer 2
	wire [6:0] s2[59:2];
	wire [6:0] c2[60:3];
	// index 62 : p[31][31], c1[62][0]
	// index 61 : s1[61][0], c1[61][0]
    // index 60 : s1[60][0], c1[60][0]
	
	add1 fa2_59_0 (s1[59][0], p[28][31], c1[59][1], s2[59][0], c2[60][0]);
	// index 59 : c1[59][0]

	add1 fa2_58_0 (s1[58][1], s1[58][0], c1[58][1], s2[58][0], c2[59][0]);
	// index 58 : c1[58][0]

	add1 fa2_57_0 (s1[57][1], s1[57][0], c1[57][1], s2[57][0], c2[58][0]);
	// index 57 : c1[57][0]

	add1 fa2_56_1 (s1[56][1], s1[56][0], p[25][31], s2[56][1], c2[57][1]);
	add1 fa2_56_0 (c1[56][2], c1[56][1], c1[56][0], s2[56][0], c2[57][0]);

	add1 fa2_55_1 (s1[55][2], s1[55][1], s1[55][0], s2[55][1], c2[56][1]);
	add1 fa2_55_0 (c1[55][2], c1[55][1], c1[55][0], s2[55][0], c2[56][0]);

	add1 fa2_54_1 (s1[54][2], s1[54][1], s1[54][0], s2[54][1], c2[55][1]);
	add1 fa2_54_0 (c1[54][2], c1[54][1], c1[54][0], s2[54][0], c2[55][0]);

	add1 fa2_53_2 (s1[53][2], s1[53][1], s1[53][0], s2[53][2], c2[54][2]);
	add1 fa2_53_1 (p[22][31], c1[53][3], c1[53][2], s2[53][1], c2[54][1]);
	add1 fa2_53_0 (c1[53][1], c1[53][0],       1'b0, s2[53][0], c2[54][0]);

	add1 fa2_52_2 (s1[52][3], s1[52][2], s1[52][1], s2[52][2], c2[53][2]);
	add1 fa2_52_1 (s1[52][0], c1[52][3], c1[52][2], s2[52][1], c2[53][1]);
	add1 fa2_52_0 (c1[52][1], c1[52][0],       1'b0, s2[52][0], c2[53][0]);

	add1 fa2_51_2 (s1[51][3], s1[51][2], s1[51][1], s2[51][2], c2[52][2]);
	add1 fa2_51_1 (s1[51][0], c1[51][3], c1[51][2], s2[51][1], c2[52][1]);
	add1 fa2_51_0 (c1[51][1], c1[51][0],       1'b0, s2[51][0], c2[52][0]);

	add1 fa2_50_2 (s1[50][3], s1[50][2], s1[50][1], s2[50][2], c2[51][2]);
	add1 fa2_50_1 (s1[50][0], p[19][31], c1[50][4], s2[50][1], c2[51][1]);
	add1 fa2_50_0 (c1[50][3], c1[50][2], c1[50][1], s2[50][0], c2[51][0]);
	// index 50 : c1[50][0]

	add1 fa2_49_2 (s1[49][4], s1[49][3], s1[49][2], s2[49][2], c2[50][2]);
	add1 fa2_49_1 (s1[49][1], s1[49][0], c1[49][4], s2[49][1], c2[50][1]);
	add1 fa2_49_0 (c1[49][3], c1[49][2], c1[49][1], s2[49][0], c2[50][0]);
	// index 49 : c1[49][0]

	add1 fa2_48_2 (s1[48][4], s1[48][3], s1[48][2], s2[48][2], c2[49][2]);
	add1 fa2_48_1 (s1[48][1], s1[48][0], c1[48][4], s2[48][1], c2[49][1]);
	add1 fa2_48_0 (c1[48][3], c1[48][2], c1[48][1], s2[48][0], c2[49][0]);
	// index 48 : c1[48][0]

	add1 fa2_47_3 (s1[47][4], s1[47][3], s1[47][2], s2[47][3], c2[48][3]);
	add1 fa2_47_2 (s1[47][1], s1[47][0], p[16][31], s2[47][2], c2[48][2]);
	add1 fa2_47_1 (c1[47][5], c1[47][4], c1[47][3], s2[47][1], c2[48][1]);
	add1 fa2_47_0 (c1[47][2], c1[47][1], c1[47][0], s2[47][0], c2[48][0]);

	add1 fa2_46_3 (s1[46][5], s1[46][4], s1[46][3], s2[46][3], c2[47][3]);
	add1 fa2_46_2 (s1[46][2], s1[46][1], s1[46][0], s2[46][2], c2[47][2]);
	add1 fa2_46_1 (c1[46][5], c1[46][4], c1[46][3], s2[46][1], c2[47][1]);
	add1 fa2_46_0 (c1[46][2], c1[46][1], c1[46][0], s2[46][0], c2[47][0]);

	add1 fa2_45_3 (s1[45][5], s1[45][4], s1[45][3], s2[45][3], c2[46][3]);
	add1 fa2_45_2 (s1[45][2], s1[45][1], s1[45][0], s2[45][2], c2[46][2]);
	add1 fa2_45_1 (c1[45][5], c1[45][4], c1[45][3], s2[45][1], c2[46][1]);
	add1 fa2_45_0 (c1[45][2], c1[45][1], c1[45][0], s2[45][0], c2[46][0]);

	add1 fa2_44_4 (s1[44][5], s1[44][4], s1[44][3], s2[44][4], c2[45][4]);
	add1 fa2_44_3 (s1[44][2], s1[44][1], s1[44][0], s2[44][3], c2[45][3]);
	add1 fa2_44_2 (p[13][31], c1[44][6], c1[44][5], s2[44][2], c2[45][2]);
	add1 fa2_44_1 (c1[44][4], c1[44][3], c1[44][2], s2[44][1], c2[45][1]);
	add1 fa2_44_0 (c1[44][1], c1[44][0],      1'b0, s2[44][0], c2[45][0]);

	add1 fa2_43_4 (s1[43][6], s1[43][5], s1[43][4], s2[43][4], c2[44][4]);
	add1 fa2_43_3 (s1[43][3], s1[43][2], s1[43][1], s2[43][3], c2[44][3]);
	add1 fa2_43_2 (s1[43][0], c1[43][6], c1[43][5], s2[43][2], c2[44][2]);
	add1 fa2_43_1 (c1[43][4], c1[43][3], c1[43][2], s2[43][1], c2[44][1]);
	add1 fa2_43_0 (c1[43][1], c1[43][0],      1'b0, s2[43][0], c2[44][0]);

	add1 fa2_42_4 (s1[42][6], s1[42][5], s1[42][4], s2[42][4], c2[43][4]);
	add1 fa2_42_3 (s1[42][3], s1[42][2], s1[42][1], s2[42][3], c2[43][3]);
	add1 fa2_42_2 (s1[42][0], c1[42][6], c1[42][5], s2[42][2], c2[43][2]);
	add1 fa2_42_1 (c1[42][4], c1[42][3], c1[42][2], s2[42][1], c2[43][1]);
	add1 fa2_42_0 (c1[42][1], c1[42][0],       1'b0, s2[42][0], c2[43][0]);

	add1 fa2_41_4 (s1[41][6], s1[41][5], s1[41][4], s2[41][4], c2[42][4]);
	add1 fa2_41_3 (s1[41][3], s1[41][2], s1[41][1], s2[41][3], c2[42][3]);
	add1 fa2_41_2 (s1[41][0], p[10][31], c1[41][7], s2[41][2], c2[42][2]);
	add1 fa2_41_1 (c1[41][6], c1[41][5], c1[41][4], s2[41][1], c2[42][1]);
	add1 fa2_41_0 (c1[41][3], c1[41][2], c1[41][1], s2[41][0], c2[42][0]);
	// index 41 : c1[41][0]

	add1 fa2_40_4 (s1[40][7], s1[40][6], s1[40][5], s2[40][4], c2[41][4]);
	add1 fa2_40_3 (s1[40][4], s1[40][3], s1[40][2], s2[40][3], c2[41][3]);
	add1 fa2_40_2 (s1[40][1], s1[40][0], c1[40][7], s2[40][2], c2[41][2]);
	add1 fa2_40_1 (c1[40][6], c1[40][5], c1[40][4], s2[40][1], c2[41][1]);
	add1 fa2_40_0 (c1[40][3], c1[40][2], c1[40][1], s2[40][0], c2[41][0]);
	// index 40 : c1[40][0]

	add1 fa2_39_4 (s1[39][7], s1[39][6], s1[39][5], s2[39][4], c2[40][4]);
	add1 fa2_39_3 (s1[39][4], s1[39][3], s1[39][2], s2[39][3], c2[40][3]);
	add1 fa2_39_2 (s1[39][1], s1[39][0], c1[39][7], s2[39][2], c2[40][2]);
	add1 fa2_39_1 (c1[39][6], c1[39][5], c1[39][4], s2[39][1], c2[40][1]);
	add1 fa2_39_0 (c1[39][3], c1[39][2], c1[39][1], s2[39][0], c2[40][0]);
	// index 39 : c1[39][0]

	add1 fa2_38_5 (s1[38][7], s1[38][6], s1[38][5], s2[38][5], c2[39][5]);
	add1 fa2_38_4 (s1[38][4], s1[38][3], s1[38][2], s2[38][4], c2[39][4]);
	add1 fa2_38_3 (s1[38][1], s1[38][0], p[7][31], s2[38][3], c2[39][3]);
	add1 fa2_38_2 (c1[38][8], c1[38][7], c1[38][6], s2[38][2], c2[39][2]);
	add1 fa2_38_1 (c1[38][5], c1[38][4], c1[38][3], s2[38][1], c2[39][1]);
	add1 fa2_38_0 (c1[38][2], c1[38][1], c1[38][0], s2[38][0], c2[39][0]);

	add1 fa2_37_5 (s1[37][8], s1[37][7], s1[37][6], s2[37][5], c2[38][5]);
	add1 fa2_37_4 (s1[37][5], s1[37][4], s1[37][3], s2[37][4], c2[38][4]);
	add1 fa2_37_3 (s1[37][2], s1[37][1], s1[37][0], s2[37][3], c2[38][3]);
	add1 fa2_37_2 (c1[37][8], c1[37][7], c1[37][6], s2[37][2], c2[38][2]);
	add1 fa2_37_1 (c1[37][5], c1[37][4], c1[37][3], s2[37][1], c2[38][1]);
	add1 fa2_37_0 (c1[37][2], c1[37][1], c1[37][0], s2[37][0], c2[38][0]);

	add1 fa2_36_5 (s1[36][8], s1[36][7], s1[36][6], s2[36][5], c2[37][5]);
	add1 fa2_36_4 (s1[36][5], s1[36][4], s1[36][3], s2[36][4], c2[37][4]);
	add1 fa2_36_3 (s1[36][2], s1[36][1], s1[36][0], s2[36][3], c2[37][3]);
	add1 fa2_36_2 (c1[36][8], c1[36][7], c1[36][6], s2[36][2], c2[37][2]);
	add1 fa2_36_1 (c1[36][5], c1[36][4], c1[36][3], s2[36][1], c2[37][1]);
	add1 fa2_36_0 (c1[36][2], c1[36][1], c1[36][0], s2[36][0], c2[37][0]);

	add1 fa2_35_6 (s1[35][8], s1[35][7], s1[35][6], s2[35][6], c2[36][6]);
	add1 fa2_35_5 (s1[35][5], s1[35][4], s1[35][3], s2[35][5], c2[36][5]);
	add1 fa2_35_4 (s1[35][2], s1[35][1], s1[35][0], s2[35][4], c2[36][4]);
	add1 fa2_35_3 (p[4][31], c1[35][9], c1[35][8], s2[35][3], c2[36][3]);
	add1 fa2_35_2 (c1[35][7], c1[35][6], c1[35][5], s2[35][2], c2[36][2]);
	add1 fa2_35_1 (c1[35][4], c1[35][3], c1[35][2], s2[35][1], c2[36][1]);
	add1 fa2_35_0 (c1[35][1], c1[35][0],       1'b0, s2[35][0], c2[36][0]);

	add1 fa2_34_6 (s1[34][9], s1[34][8], s1[34][7], s2[34][6], c2[35][6]);
	add1 fa2_34_5 (s1[34][6], s1[34][5], s1[34][4], s2[34][5], c2[35][5]);
	add1 fa2_34_4 (s1[34][3], s1[34][2], s1[34][1], s2[34][4], c2[35][4]);
	add1 fa2_34_3 (s1[34][0], c1[34][9], c1[34][8], s2[34][3], c2[35][3]);
	add1 fa2_34_2 (c1[34][7], c1[34][6], c1[34][5], s2[34][2], c2[35][2]);
	add1 fa2_34_1 (c1[34][4], c1[34][3], c1[34][2], s2[34][1], c2[35][1]);
	add1 fa2_34_0 (c1[34][1], c1[34][0],       1'b0, s2[34][0], c2[35][0]);

	add1 fa2_33_6 (s1[33][9], s1[33][8], s1[33][7], s2[33][6], c2[34][6]);
	add1 fa2_33_5 (s1[33][6], s1[33][5], s1[33][4], s2[33][5], c2[34][5]);
	add1 fa2_33_4 (s1[33][3], s1[33][2], s1[33][1], s2[33][4], c2[34][4]);
	add1 fa2_33_3 (s1[33][0], c1[33][9], c1[33][8], s2[33][3], c2[34][3]);
	add1 fa2_33_2 (c1[33][7], c1[33][6], c1[33][5], s2[33][2], c2[34][2]);
	add1 fa2_33_1 (c1[33][4], c1[33][3], c1[33][2], s2[33][1], c2[34][1]);
	add1 fa2_33_0 (c1[33][1], c1[33][0],       1'b0, s2[33][0], c2[34][0]);

	add1 fa2_32_6 (s1[32][9], s1[32][8], s1[32][7], s2[32][6], c2[33][6]);
	add1 fa2_32_5 (s1[32][6], s1[32][5], s1[32][4], s2[32][5], c2[33][5]);
	add1 fa2_32_4 (s1[32][3], s1[32][2], s1[32][1], s2[32][4], c2[33][4]);
	add1 fa2_32_3 (s1[32][0], p[1][31], c1[32][10], s2[32][3], c2[33][3]);
	add1 fa2_32_2 (c1[32][9], c1[32][8], c1[32][7], s2[32][2], c2[33][2]);
	add1 fa2_32_1 (c1[32][6], c1[32][5], c1[32][4], s2[32][1], c2[33][1]);
	add1 fa2_32_0 (c1[32][3], c1[32][2], c1[32][1], s2[32][0], c2[33][0]);
	// index 32 : c1[32][0]

	add1 fa2_31_6 (s1[31][10], s1[31][9], s1[31][8], s2[31][6], c2[32][6]);
	add1 fa2_31_5 (s1[31][7], s1[31][6], s1[31][5], s2[31][5], c2[32][5]);
	add1 fa2_31_4 (s1[31][4], s1[31][3], s1[31][2], s2[31][4], c2[32][4]);
	add1 fa2_31_3 (s1[31][1], s1[31][0], c1[31][9], s2[31][3], c2[32][3]);
	add1 fa2_31_2 (c1[31][8], c1[31][7], c1[31][6], s2[31][2], c2[32][2]);
	add1 fa2_31_1 (c1[31][5], c1[31][4], c1[31][3], s2[31][1], c2[32][1]);
	add1 fa2_31_0 (c1[31][2], c1[31][1], c1[31][0], s2[31][0], c2[32][0]);

	add1 fa2_30_6 (s1[30][9], s1[30][8], s1[30][7], s2[30][6], c2[31][6]);
	add1 fa2_30_5 (s1[30][6], s1[30][5], s1[30][4], s2[30][5], c2[31][5]);
	add1 fa2_30_4 (s1[30][3], s1[30][2], s1[30][1], s2[30][4], c2[31][4]);
	add1 fa2_30_3 (s1[30][0], p[0][30], c1[30][9], s2[30][3], c2[31][3]);
	add1 fa2_30_2 (c1[30][8], c1[30][7], c1[30][6], s2[30][2], c2[31][2]);
	add1 fa2_30_1 (c1[30][5], c1[30][4], c1[30][3], s2[30][1], c2[31][1]);
	add1 fa2_30_0 (c1[30][2], c1[30][1], c1[30][0], s2[30][0], c2[31][0]);

	add1 fa2_29_6 (s1[29][9], s1[29][8], s1[29][7], s2[29][6], c2[30][6]);
	add1 fa2_29_5 (s1[29][6], s1[29][5], s1[29][4], s2[29][5], c2[30][5]);
	add1 fa2_29_4 (s1[29][3], s1[29][2], s1[29][1], s2[29][4], c2[30][4]);
	add1 fa2_29_3 (s1[29][0], c1[29][9], c1[29][8], s2[29][3], c2[30][3]);
	add1 fa2_29_2 (c1[29][7], c1[29][6], c1[29][5], s2[29][2], c2[30][2]);
	add1 fa2_29_1 (c1[29][4], c1[29][3], c1[29][2], s2[29][1], c2[30][1]);
	add1 fa2_29_0 (c1[29][1], c1[29][0],       1'b0, s2[29][0], c2[30][0]);

	add1 fa2_28_5 (s1[28][9], s1[28][8], s1[28][7], s2[28][5], c2[29][5]);
	add1 fa2_28_4 (s1[28][6], s1[28][5], s1[28][4], s2[28][4], c2[29][4]);
	add1 fa2_28_3 (s1[28][3], s1[28][2], s1[28][1], s2[28][3], c2[29][3]);
	add1 fa2_28_2 (s1[28][0], c1[28][8], c1[28][7], s2[28][2], c2[29][2]);
	add1 fa2_28_1 (c1[28][6], c1[28][5], c1[28][4], s2[28][1], c2[29][1]);
	add1 fa2_28_0 (c1[28][3], c1[28][2], c1[28][1], s2[28][0], c2[29][0]);
	// index 28 : c1[28][0]

	add1 fa2_27_5 (s1[27][8], s1[27][7], s1[27][6], s2[27][5], c2[28][5]);
	add1 fa2_27_4 (s1[27][5], s1[27][4], s1[27][3], s2[27][4], c2[28][4]);
	add1 fa2_27_3 (s1[27][2], s1[27][1], s1[27][0], s2[27][3], c2[28][3]);
	add1 fa2_27_2 (p[0][27], c1[27][8], c1[27][7], s2[27][2], c2[28][2]);
	add1 fa2_27_1 (c1[27][6], c1[27][5], c1[27][4], s2[27][1], c2[28][1]);
	add1 fa2_27_0 (c1[27][3], c1[27][2], c1[27][1], s2[27][0], c2[28][0]);
	// index 27 : c1[27][0]

	add1 fa2_26_5 (s1[26][8], s1[26][7], s1[26][6], s2[26][5], c2[27][5]);
	add1 fa2_26_4 (s1[26][5], s1[26][4], s1[26][3], s2[26][4], c2[27][4]);
	add1 fa2_26_3 (s1[26][2], s1[26][1], s1[26][0], s2[26][3], c2[27][3]);
	add1 fa2_26_2 (c1[26][8], c1[26][7], c1[26][6], s2[26][2], c2[27][2]);
	add1 fa2_26_1 (c1[26][5], c1[26][4], c1[26][3], s2[26][1], c2[27][1]);
	add1 fa2_26_0 (c1[26][2], c1[26][1], c1[26][0], s2[26][0], c2[27][0]);

	add1 fa2_25_5 (s1[25][8], s1[25][7], s1[25][6], s2[25][5], c2[26][5]);
	add1 fa2_25_4 (s1[25][5], s1[25][4], s1[25][3], s2[25][4], c2[26][4]);
	add1 fa2_25_3 (s1[25][2], s1[25][1], s1[25][0], s2[25][3], c2[26][3]);
	add1 fa2_25_2 (c1[25][7], c1[25][6], c1[25][5], s2[25][2], c2[26][2]);
	add1 fa2_25_1 (c1[25][4], c1[25][3], c1[25][2], s2[25][1], c2[26][1]);
	add1 fa2_25_0 (c1[25][1], c1[25][0],       1'b0, s2[25][0], c2[26][0]);

	add1 fa2_24_5 (s1[24][7], s1[24][6], s1[24][5], s2[24][5], c2[25][5]);
	add1 fa2_24_4 (s1[24][4], s1[24][3], s1[24][2], s2[24][4], c2[25][4]);
	add1 fa2_24_3 (s1[24][1], s1[24][0], p[0][24], s2[24][3], c2[25][3]);
	add1 fa2_24_2 (c1[24][7], c1[24][6], c1[24][5], s2[24][2], c2[25][2]);
	add1 fa2_24_1 (c1[24][4], c1[24][3], c1[24][2], s2[24][1], c2[25][1]);
	add1 fa2_24_0 (c1[24][1], c1[24][0],       1'b0, s2[24][0], c2[25][0]);

	add1 fa2_23_4 (s1[23][7], s1[23][6], s1[23][5], s2[23][4], c2[24][4]);
	add1 fa2_23_3 (s1[23][4], s1[23][3], s1[23][2], s2[23][3], c2[24][3]);
	add1 fa2_23_2 (s1[23][1], s1[23][0], c1[23][7], s2[23][2], c2[24][2]);
	add1 fa2_23_1 (c1[23][6], c1[23][5], c1[23][4], s2[23][1], c2[24][1]);
	add1 fa2_23_0 (c1[23][3], c1[23][2], c1[23][1], s2[23][0], c2[24][0]);
	// index 23 : c1[23][0]

	add1 fa2_22_4 (s1[22][7], s1[22][6], s1[22][5], s2[22][4], c2[23][4]);
	add1 fa2_22_3 (s1[22][4], s1[22][3], s1[22][2], s2[22][3], c2[23][3]);
	add1 fa2_22_2 (s1[22][1], s1[22][0], c1[22][6], s2[22][2], c2[23][2]);
	add1 fa2_22_1 (c1[22][5], c1[22][4], c1[22][3], s2[22][1], c2[23][1]);
	add1 fa2_22_0 (c1[22][2], c1[22][1], c1[22][0], s2[22][0], c2[23][0]);

	add1 fa2_21_4 (s1[21][6], s1[21][5], s1[21][4], s2[21][4], c2[22][4]);
	add1 fa2_21_3 (s1[21][3], s1[21][2], s1[21][1], s2[21][3], c2[22][3]);
	add1 fa2_21_2 (s1[21][0], p[0][21], c1[21][6], s2[21][2], c2[22][2]);
	add1 fa2_21_1 (c1[21][5], c1[21][4], c1[21][3], s2[21][1], c2[22][1]);
	add1 fa2_21_0 (c1[21][2], c1[21][1], c1[21][0], s2[21][0], c2[22][0]);

	add1 fa2_20_4 (s1[20][6], s1[20][5], s1[20][4], s2[20][4], c2[21][4]);
	add1 fa2_20_3 (s1[20][3], s1[20][2], s1[20][1], s2[20][3], c2[21][3]);
	add1 fa2_20_2 (s1[20][0], c1[20][6], c1[20][5], s2[20][2], c2[21][2]);
	add1 fa2_20_1 (c1[20][4], c1[20][3], c1[20][2], s2[20][1], c2[21][1]);
	add1 fa2_20_0 (c1[20][1], c1[20][0],       1'b0, s2[20][0], c2[21][0]);

	add1 fa2_19_3 (s1[19][6], s1[19][5], s1[19][4], s2[19][3], c2[20][3]);
	add1 fa2_19_2 (s1[19][3], s1[19][2], s1[19][1], s2[19][2], c2[20][2]);
	add1 fa2_19_1 (s1[19][0], c1[19][5], c1[19][4], s2[19][1], c2[20][1]);
	add1 fa2_19_0 (c1[19][3], c1[19][2], c1[19][1], s2[19][0], c2[20][0]);
	// index 19 : c1[19][0]

	add1 fa2_18_3 (s1[18][5], s1[18][4], s1[18][3], s2[18][3], c2[19][3]);
	add1 fa2_18_2 (s1[18][2], s1[18][1], s1[18][0], s2[18][2], c2[19][2]);
	add1 fa2_18_1 (p[0][18], c1[18][5], c1[18][4], s2[18][1], c2[19][1]);
	add1 fa2_18_0 (c1[18][3], c1[18][2], c1[18][1], s2[18][0], c2[19][0]);
	// index 18 : c1[18][0]

	add1 fa2_17_3 (s1[17][5], s1[17][4], s1[17][3], s2[17][3], c2[18][3]);
	add1 fa2_17_2 (s1[17][2], s1[17][1], s1[17][0], s2[17][2], c2[18][2]);
	add1 fa2_17_1 (c1[17][5], c1[17][4], c1[17][3], s2[17][1], c2[18][1]);
	add1 fa2_17_0 (c1[17][2], c1[17][1], c1[17][0], s2[17][0], c2[18][0]);

	add1 fa2_16_3 (s1[16][5], s1[16][4], s1[16][3], s2[16][3], c2[17][3]);
	add1 fa2_16_2 (s1[16][2], s1[16][1], s1[16][0], s2[16][2], c2[17][2]);
	add1 fa2_16_1 (c1[16][4], c1[16][3], c1[16][2], s2[16][1], c2[17][1]);
	add1 fa2_16_0 (c1[16][1], c1[16][0],       1'b0, s2[16][0], c2[17][0]);

	add1 fa2_15_3 (s1[15][4], s1[15][3], s1[15][2], s2[15][3], c2[16][3]);
	add1 fa2_15_2 (s1[15][1], s1[15][0], p[0][15], s2[15][2], c2[16][2]);
	add1 fa2_15_1 (c1[15][4], c1[15][3], c1[15][2], s2[15][1], c2[16][1]);
	add1 fa2_15_0 (c1[15][1], c1[15][0],       1'b0, s2[15][0], c2[16][0]);

	add1 fa2_14_2 (s1[14][4], s1[14][3], s1[14][2], s2[14][2], c2[15][2]);
	add1 fa2_14_1 (s1[14][1], s1[14][0], c1[14][4], s2[14][1], c2[15][1]);
	add1 fa2_14_0 (c1[14][3], c1[14][2], c1[14][1], s2[14][0], c2[15][0]);
	// index 14 : c1[14][0]

	add1 fa2_13_2 (s1[13][4], s1[13][3], s1[13][2], s2[13][2], c2[14][2]);
	add1 fa2_13_1 (s1[13][1], s1[13][0], c1[13][3], s2[13][1], c2[14][1]);
	add1 fa2_13_0 (c1[13][2], c1[13][1], c1[13][0], s2[13][0], c2[14][0]);

	add1 fa2_12_2 (s1[12][3], s1[12][2], s1[12][1], s2[12][2], c2[13][2]);
	add1 fa2_12_1 (s1[12][0], p[0][12], c1[12][3], s2[12][1], c2[13][1]);
	add1 fa2_12_0 (c1[12][2], c1[12][1], c1[12][0], s2[12][0], c2[13][0]);

	add1 fa2_11_2 (s1[11][3], s1[11][2], s1[11][1], s2[11][2], c2[12][2]);
	add1 fa2_11_1 (s1[11][0], c1[11][3], c1[11][2], s2[11][1], c2[12][1]);
	add1 fa2_11_0 (c1[11][1], c1[11][0],       1'b0, s2[11][0], c2[12][0]);

	add1 fa2_10_1 (s1[10][3], s1[10][2], s1[10][1], s2[10][1], c2[11][1]);
	add1 fa2_10_0 (s1[10][0], c1[10][2], c1[10][1], s2[10][0], c2[11][0]);
	// index 10 : c1[10][0]

	add1 fa2_9_1 (s1[9][2], s1[9][1], s1[9][0], s2[9][1], c2[10][1]);
	add1 fa2_9_0 (p[0][9], c1[9][2], c1[9][1], s2[9][0], c2[10][0]);
	// index 9 : c1[9][0]

	add1 fa2_8_1 (s1[8][2], s1[8][1], s1[8][0], s2[8][1], c2[9][1]);
	add1 fa2_8_0 (c1[8][2], c1[8][1], c1[8][0], s2[8][0], c2[9][0]);

	add1 fa2_7_1 (s1[7][2], s1[7][1], s1[7][0], s2[7][1], c2[8][1]);
	add1 fa2_7_0 (c1[7][1], c1[7][0],       1'b0, s2[7][0], c2[8][0]);

	add1 fa2_6_1 (s1[6][1], s1[6][0], p[0][6], s2[6][1], c2[7][1]);
	add1 fa2_6_0 (c1[6][1], c1[6][0],      1'b0, s2[6][0], c2[7][0]);

	add1 fa2_5_0 (s1[5][1], s1[5][0], c1[5][1], s2[5][0], c2[6][0]);
	// index 5 : c1[5][0]

	add1 fa2_4_0 (s1[4][1], s1[4][0], c1[4][0], s2[4][0], c2[5][0]);

	add1 fa2_3_0 (s1[3][0], p[0][3], c1[3][0], s2[3][0], c2[4][0]);

	add1 fa2_2_0 (s1[2][0], c1[2][0],       1'b0, s2[2][0], c2[3][0]);

	assign s[2] = s2[2][0];

	// add-layer 3
	wire [4:0] s3[60:3];
	wire [4:0] c3[61:4];
	// index 62 : p[31][31], c1[62][0]
	// index 61 : s1[61][0], c1[61][0]
	
	add1 fa3_60_0 (s1[60][0], c1[60][0], c2[60][0], s3[60][0], c3[61][0]);

	add1 fa3_59_0 (s2[59][0], c1[59][0], c2[59][0], s3[59][0], c3[60][0]);

	add1 fa3_58_0 (s2[58][0], c1[58][0], c2[58][0], s3[58][0], c3[59][0]);

	add1 fa3_57_0 (s2[57][0], c1[57][0], c2[57][1], s3[57][0], c3[58][0]);
	// index 57 : c2[57][0]

	add1 fa3_56_0 (s2[56][1], s2[56][0], c2[56][1], s3[56][0], c3[57][0]);
	// index 56 : c2[56][0]

	add1 fa3_55_0 (s2[55][1], s2[55][0], c2[55][1], s3[55][0], c3[56][0]);
	// index 55 : c2[55][0]

	add1 fa3_54_1 (s2[54][1], s2[54][0], c2[54][2], s3[54][1], c3[55][1]);
	add1 fa3_54_0 (c2[54][1], c2[54][0],       1'b0, s3[54][0], c3[55][0]);

	add1 fa3_53_1 (s2[53][2], s2[53][1], s2[53][0], s3[53][1], c3[54][1]);
	add1 fa3_53_0 (c2[53][2], c2[53][1], c2[53][0], s3[53][0], c3[54][0]);

	add1 fa3_52_1 (s2[52][2], s2[52][1], s2[52][0], s3[52][1], c3[53][1]);
	add1 fa3_52_0 (c2[52][2], c2[52][1], c2[52][0], s3[52][0], c3[53][0]);

	add1 fa3_51_1 (s2[51][2], s2[51][1], s2[51][0], s3[51][1], c3[52][1]);
	add1 fa3_51_0 (c2[51][2], c2[51][1], c2[51][0], s3[51][0], c3[52][0]);

	add1 fa3_50_1 (s2[50][2], s2[50][1], s2[50][0], s3[50][1], c3[51][1]);
	add1 fa3_50_0 (c1[50][0], c2[50][2], c2[50][1], s3[50][0], c3[51][0]);
	// index 50 : c2[50][0]

	add1 fa3_49_1 (s2[49][2], s2[49][1], s2[49][0], s3[49][1], c3[50][1]);
	add1 fa3_49_0 (c1[49][0], c2[49][2], c2[49][1], s3[49][0], c3[50][0]);
	// index 49 : c2[49][0]

	add1 fa3_48_2 (s2[48][2], s2[48][1], s2[48][0], s3[48][2], c3[49][2]);
	add1 fa3_48_1 (c1[48][0], c2[48][3], c2[48][2], s3[48][1], c3[49][1]);
	add1 fa3_48_0 (c2[48][1], c2[48][0],       1'b0, s3[48][0], c3[49][0]);

	add1 fa3_47_2 (s2[47][3], s2[47][2], s2[47][1], s3[47][2], c3[48][2]);
	add1 fa3_47_1 (s2[47][0], c2[47][3], c2[47][2], s3[47][1], c3[48][1]);
	add1 fa3_47_0 (c2[47][1], c2[47][0],       1'b0, s3[47][0], c3[48][0]);

	add1 fa3_46_2 (s2[46][3], s2[46][2], s2[46][1], s3[46][2], c3[47][2]);
	add1 fa3_46_1 (s2[46][0], c2[46][3], c2[46][2], s3[46][1], c3[47][1]);
	add1 fa3_46_0 (c2[46][1], c2[46][0],       1'b0, s3[46][0], c3[47][0]);

	add1 fa3_45_2 (s2[45][3], s2[45][2], s2[45][1], s3[45][2], c3[46][2]);
	add1 fa3_45_1 (s2[45][0], c2[45][4], c2[45][3], s3[45][1], c3[46][1]);
	add1 fa3_45_0 (c2[45][2], c2[45][1], c2[45][0], s3[45][0], c3[46][0]);

	add1 fa3_44_2 (s2[44][4], s2[44][3], s2[44][2], s3[44][2], c3[45][2]);
	add1 fa3_44_1 (s2[44][1], s2[44][0], c2[44][4], s3[44][1], c3[45][1]);
	add1 fa3_44_0 (c2[44][3], c2[44][2], c2[44][1], s3[44][0], c3[45][0]);
	// index 44 : c2[44][0]

	add1 fa3_43_2 (s2[43][4], s2[43][3], s2[43][2], s3[43][2], c3[44][2]);
	add1 fa3_43_1 (s2[43][1], s2[43][0], c2[43][4], s3[43][1], c3[44][1]);
	add1 fa3_43_0 (c2[43][3], c2[43][2], c2[43][1], s3[43][0], c3[44][0]);
	// index 43 : c2[43][0]

	add1 fa3_42_2 (s2[42][4], s2[42][3], s2[42][2], s3[42][2], c3[43][2]);
	add1 fa3_42_1 (s2[42][1], s2[42][0], c2[42][4], s3[42][1], c3[43][1]);
	add1 fa3_42_0 (c2[42][3], c2[42][2], c2[42][1], s3[42][0], c3[43][0]);
	// index 42 : c2[42][0]

	add1 fa3_41_3 (s2[41][4], s2[41][3], s2[41][2], s3[41][3], c3[42][3]);
	add1 fa3_41_2 (s2[41][1], s2[41][0], c1[41][0], s3[41][2], c3[42][2]);
	add1 fa3_41_1 (c2[41][4], c2[41][3], c2[41][2], s3[41][1], c3[42][1]);
	add1 fa3_41_0 (c2[41][1], c2[41][0],       1'b0, s3[41][0], c3[42][0]);

	add1 fa3_40_3 (s2[40][4], s2[40][3], s2[40][2], s3[40][3], c3[41][3]);
	add1 fa3_40_2 (s2[40][1], s2[40][0], c1[40][0], s3[40][2], c3[41][2]);
	add1 fa3_40_1 (c2[40][4], c2[40][3], c2[40][2], s3[40][1], c3[41][1]);
	add1 fa3_40_0 (c2[40][1], c2[40][0],       1'b0, s3[40][0], c3[41][0]);

	add1 fa3_39_3 (s2[39][4], s2[39][3], s2[39][2], s3[39][3], c3[40][3]);
	add1 fa3_39_2 (s2[39][1], s2[39][0], c1[39][0], s3[39][2], c3[40][2]);
	add1 fa3_39_1 (c2[39][5], c2[39][4], c2[39][3], s3[39][1], c3[40][1]);
	add1 fa3_39_0 (c2[39][2], c2[39][1], c2[39][0], s3[39][0], c3[40][0]);

	add1 fa3_38_3 (s2[38][5], s2[38][4], s2[38][3], s3[38][3], c3[39][3]);
	add1 fa3_38_2 (s2[38][2], s2[38][1], s2[38][0], s3[38][2], c3[39][2]);
	add1 fa3_38_1 (c2[38][5], c2[38][4], c2[38][3], s3[38][1], c3[39][1]);
	add1 fa3_38_0 (c2[38][2], c2[38][1], c2[38][0], s3[38][0], c3[39][0]);

	add1 fa3_37_3 (s2[37][5], s2[37][4], s2[37][3], s3[37][3], c3[38][3]);
	add1 fa3_37_2 (s2[37][2], s2[37][1], s2[37][0], s3[37][2], c3[38][2]);
	add1 fa3_37_1 (c2[37][5], c2[37][4], c2[37][3], s3[37][1], c3[38][1]);
	add1 fa3_37_0 (c2[37][2], c2[37][1], c2[37][0], s3[37][0], c3[38][0]);

	add1 fa3_36_3 (s2[36][5], s2[36][4], s2[36][3], s3[36][3], c3[37][3]);
	add1 fa3_36_2 (s2[36][2], s2[36][1], s2[36][0], s3[36][2], c3[37][2]);
	add1 fa3_36_1 (c2[36][6], c2[36][5], c2[36][4], s3[36][1], c3[37][1]);
	add1 fa3_36_0 (c2[36][3], c2[36][2], c2[36][1], s3[36][0], c3[37][0]);
	// index 36 : c2[36][0]

	add1 fa3_35_4 (s2[35][6], s2[35][5], s2[35][4], s3[35][4], c3[36][4]);
	add1 fa3_35_3 (s2[35][3], s2[35][2], s2[35][1], s3[35][3], c3[36][3]);
	add1 fa3_35_2 (s2[35][0], c2[35][6], c2[35][5], s3[35][2], c3[36][2]);
	add1 fa3_35_1 (c2[35][4], c2[35][3], c2[35][2], s3[35][1], c3[36][1]);
	add1 fa3_35_0 (c2[35][1], c2[35][0],       1'b0, s3[35][0], c3[36][0]);

	add1 fa3_34_4 (s2[34][6], s2[34][5], s2[34][4], s3[34][4], c3[35][4]);
	add1 fa3_34_3 (s2[34][3], s2[34][2], s2[34][1], s3[34][3], c3[35][3]);
	add1 fa3_34_2 (s2[34][0], c2[34][6], c2[34][5], s3[34][2], c3[35][2]);
	add1 fa3_34_1 (c2[34][4], c2[34][3], c2[34][2], s3[34][1], c3[35][1]);
	add1 fa3_34_0 (c2[34][1], c2[34][0],       1'b0, s3[34][0], c3[35][0]);

	add1 fa3_33_4 (s2[33][6], s2[33][5], s2[33][4], s3[33][4], c3[34][4]);
	add1 fa3_33_3 (s2[33][3], s2[33][2], s2[33][1], s3[33][3], c3[34][3]);
	add1 fa3_33_2 (s2[33][0], c2[33][6], c2[33][5], s3[33][2], c3[34][2]);
	add1 fa3_33_1 (c2[33][4], c2[33][3], c2[33][2], s3[33][1], c3[34][1]);
	add1 fa3_33_0 (c2[33][1], c2[33][0],       1'b0, s3[33][0], c3[34][0]);

	add1 fa3_32_4 (s2[32][6], s2[32][5], s2[32][4], s3[32][4], c3[33][4]);
	add1 fa3_32_3 (s2[32][3], s2[32][2], s2[32][1], s3[32][3], c3[33][3]);
	add1 fa3_32_2 (s2[32][0], c1[32][0], c2[32][6], s3[32][2], c3[33][2]);
	add1 fa3_32_1 (c2[32][5], c2[32][4], c2[32][3], s3[32][1], c3[33][1]);
	add1 fa3_32_0 (c2[32][2], c2[32][1], c2[32][0], s3[32][0], c3[33][0]);

	add1 fa3_31_4 (s2[31][6], s2[31][5], s2[31][4], s3[31][4], c3[32][4]);
	add1 fa3_31_3 (s2[31][3], s2[31][2], s2[31][1], s3[31][3], c3[32][3]);
	add1 fa3_31_2 (s2[31][0], c2[31][6], c2[31][5], s3[31][2], c3[32][2]);
	add1 fa3_31_1 (c2[31][4], c2[31][3], c2[31][2], s3[31][1], c3[32][1]);
	add1 fa3_31_0 (c2[31][1], c2[31][0],       1'b0, s3[31][0], c3[32][0]);

	add1 fa3_30_4 (s2[30][6], s2[30][5], s2[30][4], s3[30][4], c3[31][4]);
	add1 fa3_30_3 (s2[30][3], s2[30][2], s2[30][1], s3[30][3], c3[31][3]);
	add1 fa3_30_2 (s2[30][0], c2[30][6], c2[30][5], s3[30][2], c3[31][2]);
	add1 fa3_30_1 (c2[30][4], c2[30][3], c2[30][2], s3[30][1], c3[31][1]);
	add1 fa3_30_0 (c2[30][1], c2[30][0],       1'b0, s3[30][0], c3[31][0]);

	add1 fa3_29_3 (s2[29][6], s2[29][5], s2[29][4], s3[29][3], c3[30][3]);
	add1 fa3_29_2 (s2[29][3], s2[29][2], s2[29][1], s3[29][2], c3[30][2]);
	add1 fa3_29_1 (s2[29][0], c2[29][5], c2[29][4], s3[29][1], c3[30][1]);
	add1 fa3_29_0 (c2[29][3], c2[29][2], c2[29][1], s3[29][0], c3[30][0]);
	// index 29 : c2[29][0]

	add1 fa3_28_3 (s2[28][5], s2[28][4], s2[28][3], s3[28][3], c3[29][3]);
	add1 fa3_28_2 (s2[28][2], s2[28][1], s2[28][0], s3[28][2], c3[29][2]);
	add1 fa3_28_1 (c1[28][0], c2[28][5], c2[28][4], s3[28][1], c3[29][1]);
	add1 fa3_28_0 (c2[28][3], c2[28][2], c2[28][1], s3[28][0], c3[29][0]);
	// index 28 : c2[28][0]

	add1 fa3_27_3 (s2[27][5], s2[27][4], s2[27][3], s3[27][3], c3[28][3]);
	add1 fa3_27_2 (s2[27][2], s2[27][1], s2[27][0], s3[27][2], c3[28][2]);
	add1 fa3_27_1 (c1[27][0], c2[27][5], c2[27][4], s3[27][1], c3[28][1]);
	add1 fa3_27_0 (c2[27][3], c2[27][2], c2[27][1], s3[27][0], c3[28][0]);
	// index 27 : c2[27][0]

	add1 fa3_26_3 (s2[26][5], s2[26][4], s2[26][3], s3[26][3], c3[27][3]);
	add1 fa3_26_2 (s2[26][2], s2[26][1], s2[26][0], s3[26][2], c3[27][2]);
	add1 fa3_26_1 (c2[26][5], c2[26][4], c2[26][3], s3[26][1], c3[27][1]);
	add1 fa3_26_0 (c2[26][2], c2[26][1], c2[26][0], s3[26][0], c3[27][0]);

	add1 fa3_25_3 (s2[25][5], s2[25][4], s2[25][3], s3[25][3], c3[26][3]);
	add1 fa3_25_2 (s2[25][2], s2[25][1], s2[25][0], s3[25][2], c3[26][2]);
	add1 fa3_25_1 (c2[25][5], c2[25][4], c2[25][3], s3[25][1], c3[26][1]);
	add1 fa3_25_0 (c2[25][2], c2[25][1], c2[25][0], s3[25][0], c3[26][0]);

	add1 fa3_24_3 (s2[24][5], s2[24][4], s2[24][3], s3[24][3], c3[25][3]);
	add1 fa3_24_2 (s2[24][2], s2[24][1], s2[24][0], s3[24][2], c3[25][2]);
	add1 fa3_24_1 (c2[24][4], c2[24][3], c2[24][2], s3[24][1], c3[25][1]);
	add1 fa3_24_0 (c2[24][1], c2[24][0],       1'b0, s3[24][0], c3[25][0]);

	add1 fa3_23_3 (s2[23][4], s2[23][3], s2[23][2], s3[23][3], c3[24][3]);
	add1 fa3_23_2 (s2[23][1], s2[23][0], c1[23][0], s3[23][2], c3[24][2]);
	add1 fa3_23_1 (c2[23][4], c2[23][3], c2[23][2], s3[23][1], c3[24][1]);
	add1 fa3_23_0 (c2[23][1], c2[23][0],       1'b0, s3[23][0], c3[24][0]);

	add1 fa3_22_2 (s2[22][4], s2[22][3], s2[22][2], s3[22][2], c3[23][2]);
	add1 fa3_22_1 (s2[22][1], s2[22][0], c2[22][4], s3[22][1], c3[23][1]);
	add1 fa3_22_0 (c2[22][3], c2[22][2], c2[22][1], s3[22][0], c3[23][0]);
	// index 22 : c2[22][0]

	add1 fa3_21_2 (s2[21][4], s2[21][3], s2[21][2], s3[21][2], c3[22][2]);
	add1 fa3_21_1 (s2[21][1], s2[21][0], c2[21][4], s3[21][1], c3[22][1]);
	add1 fa3_21_0 (c2[21][3], c2[21][2], c2[21][1], s3[21][0], c3[22][0]);
	// index 21 : c2[21][0]

	add1 fa3_20_2 (s2[20][4], s2[20][3], s2[20][2], s3[20][2], c3[21][2]);
	add1 fa3_20_1 (s2[20][1], s2[20][0], c2[20][3], s3[20][1], c3[21][1]);
	add1 fa3_20_0 (c2[20][2], c2[20][1], c2[20][0], s3[20][0], c3[21][0]);

	add1 fa3_19_2 (s2[19][3], s2[19][2], s2[19][1], s3[19][2], c3[20][2]);
	add1 fa3_19_1 (s2[19][0], c1[19][0], c2[19][3], s3[19][1], c3[20][1]);
	add1 fa3_19_0 (c2[19][2], c2[19][1], c2[19][0], s3[19][0], c3[20][0]);

	add1 fa3_18_2 (s2[18][3], s2[18][2], s2[18][1], s3[18][2], c3[19][2]);
	add1 fa3_18_1 (s2[18][0], c1[18][0], c2[18][3], s3[18][1], c3[19][1]);
	add1 fa3_18_0 (c2[18][2], c2[18][1], c2[18][0], s3[18][0], c3[19][0]);

	add1 fa3_17_2 (s2[17][3], s2[17][2], s2[17][1], s3[17][2], c3[18][2]);
	add1 fa3_17_1 (s2[17][0], c2[17][3], c2[17][2], s3[17][1], c3[18][1]);
	add1 fa3_17_0 (c2[17][1], c2[17][0],       1'b0, s3[17][0], c3[18][0]);

	add1 fa3_16_2 (s2[16][3], s2[16][2], s2[16][1], s3[16][2], c3[17][2]);
	add1 fa3_16_1 (s2[16][0], c2[16][3], c2[16][2], s3[16][1], c3[17][1]);
	add1 fa3_16_0 (c2[16][1], c2[16][0],       1'b0, s3[16][0], c3[17][0]);

	add1 fa3_15_1 (s2[15][3], s2[15][2], s2[15][1], s3[15][1], c3[16][1]);
	add1 fa3_15_0 (s2[15][0], c2[15][2], c2[15][1], s3[15][0], c3[16][0]);
	// index 15 : c2[15][0]

	add1 fa3_14_1 (s2[14][2], s2[14][1], s2[14][0], s3[14][1], c3[15][1]);
	add1 fa3_14_0 (c1[14][0], c2[14][2], c2[14][1], s3[14][0], c3[15][0]);
	// index 14 : c2[14][0]

	add1 fa3_13_1 (s2[13][2], s2[13][1], s2[13][0], s3[13][1], c3[14][1]);
	add1 fa3_13_0 (c2[13][2], c2[13][1], c2[13][0], s3[13][0], c3[14][0]);

	add1 fa3_12_1 (s2[12][2], s2[12][1], s2[12][0], s3[12][1], c3[13][1]);
	add1 fa3_12_0 (c2[12][2], c2[12][1], c2[12][0], s3[12][0], c3[13][0]);

	add1 fa3_11_1 (s2[11][2], s2[11][1], s2[11][0], s3[11][1], c3[12][1]);
	add1 fa3_11_0 (c2[11][1], c2[11][0],       1'b0, s3[11][0], c3[12][0]);

	add1 fa3_10_1 (s2[10][1], s2[10][0], c1[10][0], s3[10][1], c3[11][1]);
	add1 fa3_10_0 (c2[10][1], c2[10][0],       1'b0, s3[10][0], c3[11][0]);

	add1 fa3_9_1 (s2[9][1], s2[9][0], c1[9][0], s3[9][1], c3[10][1]);
	add1 fa3_9_0 (c2[9][1], c2[9][0],       1'b0, s3[9][0], c3[10][0]);

	add1 fa3_8_0 (s2[8][1], s2[8][0], c2[8][1], s3[8][0], c3[9][0]);
	// index 8 : c2[8][0]

	add1 fa3_7_0 (s2[7][1], s2[7][0], c2[7][1], s3[7][0], c3[8][0]);
	// index 7 : c2[7][0]

	add1 fa3_6_0 (s2[6][1], s2[6][0], c2[6][0], s3[6][0], c3[7][0]);

	add1 fa3_5_0 (s2[5][0], c1[5][0], c2[5][0], s3[5][0], c3[6][0]);

	add1 fa3_4_0 (s2[4][0], c2[4][0],       1'b0, s3[4][0], c3[5][0]);

	add1 fa3_3_0 (s2[3][0], c2[3][0],       1'b0, s3[3][0], c3[4][0]);

	assign s[3] = s3[3][0];

	// add-layer 4
	wire [2:0] s4[61:4];
	wire [2:0] c4[62:5];
	// index 62 : p[31][31], c1[62][0]

	add1 fa4_61_0 (s1[61][0], c1[61][0], c3[61][0], s4[61][0], c4[62][0]);

	add1 fa4_60_0 (s3[60][0], c3[60][0],      1'b0, s4[60][0], c4[61][0]);

	add1 fa4_59_0 (s3[59][0], c3[59][0],      1'b0, s4[59][0], c4[60][0]);

	add1 fa4_58_0 (s3[58][0], c3[58][0],      1'b0, s4[58][0], c4[59][0]);

	add1 fa4_57_0 (s3[57][0], c2[57][0], c3[57][0], s4[57][0], c4[58][0]);

	add1 fa4_56_0 (s3[56][0], c2[56][0], c3[56][0], s4[56][0], c4[57][0]);

	add1 fa4_55_0 (s3[55][0], c2[55][0], c3[55][1], s4[55][0], c4[56][0]);
	// index 55 : c3[55][0]

	add1 fa4_54_0 (s3[54][1], s3[54][0], c3[54][1], s4[54][0], c4[55][0]);
	// index 54 : c3[54][0]

	add1 fa4_53_0 (s3[53][1], s3[53][0], c3[53][1], s4[53][0], c4[54][0]);
	// index 53 : c3[53][0]

	add1 fa4_52_0 (s3[52][1], s3[52][0], c3[52][1], s4[52][0], c4[53][0]);
	// index 52 : c3[52][0]

	add1 fa4_51_0 (s3[51][1], s3[51][0], c3[51][1], s4[51][0], c4[52][0]);
	// index 51 : c3[51][0]

	add1 fa4_50_1 (s3[50][1], s3[50][0], c2[50][0], s4[50][1], c4[51][1]);
	add1 fa4_50_0 (c3[50][1], c3[50][0],       1'b0, s4[50][0], c4[51][0]);

	add1 fa4_49_1 (s3[49][1], s3[49][0], c2[49][0], s4[49][1], c4[50][1]);
	add1 fa4_49_0 (c3[49][2], c3[49][1], c3[49][0], s4[49][0], c4[50][0]);

	add1 fa4_48_1 (s3[48][2], s3[48][1], s3[48][0], s4[48][1], c4[49][1]);
	add1 fa4_48_0 (c3[48][2], c3[48][1], c3[48][0], s4[48][0], c4[49][0]);

	add1 fa4_47_1 (s3[47][2], s3[47][1], s3[47][0], s4[47][1], c4[48][1]);
	add1 fa4_47_0 (c3[47][2], c3[47][1], c3[47][0], s4[47][0], c4[48][0]);

	add1 fa4_46_1 (s3[46][2], s3[46][1], s3[46][0], s4[46][1], c4[47][1]);
	add1 fa4_46_0 (c3[46][2], c3[46][1], c3[46][0], s4[46][0], c4[47][0]);

	add1 fa4_45_1 (s3[45][2], s3[45][1], s3[45][0], s4[45][1], c4[46][1]);
	add1 fa4_45_0 (c3[45][2], c3[45][1], c3[45][0], s4[45][0], c4[46][0]);

	add1 fa4_44_1 (s3[44][2], s3[44][1], s3[44][0], s4[44][1], c4[45][1]);
	add1 fa4_44_0 (c2[44][0], c3[44][2], c3[44][1], s4[44][0], c4[45][0]);
	// index 44 : c3[44][0]

	add1 fa4_43_1 (s3[43][2], s3[43][1], s3[43][0], s4[43][1], c4[44][1]);
	add1 fa4_43_0 (c2[43][0], c3[43][2], c3[43][1], s4[43][0], c4[44][0]);
	// index 43 : c3[43][0]

	add1 fa4_42_2 (s3[42][2], s3[42][1], s3[42][0], s4[42][2], c4[43][2]);
	add1 fa4_42_1 (c2[42][0], c3[42][3], c3[42][2], s4[42][1], c4[43][1]);
	add1 fa4_42_0 (c3[42][1], c3[42][0],       1'b0, s4[42][0], c4[43][0]);

	add1 fa4_41_2 (s3[41][3], s3[41][2], s3[41][1], s4[41][2], c4[42][2]);
	add1 fa4_41_1 (s3[41][0], c3[41][3], c3[41][2], s4[41][1], c4[42][1]);
	add1 fa4_41_0 (c3[41][1], c3[41][0],       1'b0, s4[41][0], c4[42][0]);

	add1 fa4_40_2 (s3[40][3], s3[40][2], s3[40][1], s4[40][2], c4[41][2]);
	add1 fa4_40_1 (s3[40][0], c3[40][3], c3[40][2], s4[40][1], c4[41][1]);
	add1 fa4_40_0 (c3[40][1], c3[40][0],       1'b0, s4[40][0], c4[41][0]);

	add1 fa4_39_2 (s3[39][3], s3[39][2], s3[39][1], s4[39][2], c4[40][2]);
	add1 fa4_39_1 (s3[39][0], c3[39][3], c3[39][2], s4[39][1], c4[40][1]);
	add1 fa4_39_0 (c3[39][1], c3[39][0],       1'b0, s4[39][0], c4[40][0]);

	add1 fa4_38_2 (s3[38][3], s3[38][2], s3[38][1], s4[38][2], c4[39][2]);
	add1 fa4_38_1 (s3[38][0], c3[38][3], c3[38][2], s4[38][1], c4[39][1]);
	add1 fa4_38_0 (c3[38][1], c3[38][0],       1'b0, s4[38][0], c4[39][0]);

	add1 fa4_37_2 (s3[37][3], s3[37][2], s3[37][1], s4[37][2], c4[38][2]);
	add1 fa4_37_1 (s3[37][0], c3[37][3], c3[37][2], s4[37][1], c4[38][1]);
	add1 fa4_37_0 (c3[37][1], c3[37][0],       1'b0, s4[37][0], c4[38][0]);

	add1 fa4_36_2 (s3[36][3], s3[36][2], s3[36][1], s4[36][2], c4[37][2]);
	add1 fa4_36_1 (s3[36][0], c2[36][0], c3[36][4], s4[36][1], c4[37][1]);
	add1 fa4_36_0 (c3[36][3], c3[36][2], c3[36][1], s4[36][0], c4[37][0]);
	// index 36 : c3[36][0]

	add1 fa4_35_2 (s3[35][4], s3[35][3], s3[35][2], s4[35][2], c4[36][2]);
	add1 fa4_35_1 (s3[35][1], s3[35][0], c3[35][4], s4[35][1], c4[36][1]);
	add1 fa4_35_0 (c3[35][3], c3[35][2], c3[35][1], s4[35][0], c4[36][0]);
	// index 35 : c3[35][0]

	add1 fa4_34_2 (s3[34][4], s3[34][3], s3[34][2], s4[34][2], c4[35][2]);
	add1 fa4_34_1 (s3[34][1], s3[34][0], c3[34][4], s4[34][1], c4[35][1]);
	add1 fa4_34_0 (c3[34][3], c3[34][2], c3[34][1], s4[34][0], c4[35][0]);
	// index 34 : c3[34][0]

	add1 fa4_33_2 (s3[33][4], s3[33][3], s3[33][2], s4[33][2], c4[34][2]);
	add1 fa4_33_1 (s3[33][1], s3[33][0], c3[33][4], s4[33][1], c4[34][1]);
	add1 fa4_33_0 (c3[33][3], c3[33][2], c3[33][1], s4[33][0], c4[34][0]);
	// index 33 : c3[33][0]

	add1 fa4_32_2 (s3[32][4], s3[32][3], s3[32][2], s4[32][2], c4[33][2]);
	add1 fa4_32_1 (s3[32][1], s3[32][0], c3[32][4], s4[32][1], c4[33][1]);
	add1 fa4_32_0 (c3[32][3], c3[32][2], c3[32][1], s4[32][0], c4[33][0]);
	// index 32 : c3[32][0]

	add1 fa4_31_2 (s3[31][4], s3[31][3], s3[31][2], s4[31][2], c4[32][2]);
	add1 fa4_31_1 (s3[31][1], s3[31][0], c3[31][4], s4[31][1], c4[32][1]);
	add1 fa4_31_0 (c3[31][3], c3[31][2], c3[31][1], s4[31][0], c4[32][0]);
	// index 31 : c3[31][0]

	add1 fa4_30_2 (s3[30][4], s3[30][3], s3[30][2], s4[30][2], c4[31][2]);
	add1 fa4_30_1 (s3[30][1], s3[30][0], c3[30][3], s4[30][1], c4[31][1]);
	add1 fa4_30_0 (c3[30][2], c3[30][1], c3[30][0], s4[30][0], c4[31][0]);

	add1 fa4_29_2 (s3[29][3], s3[29][2], s3[29][1], s4[29][2], c4[30][2]);
	add1 fa4_29_1 (s3[29][0], c2[29][0], c3[29][3], s4[29][1], c4[30][1]);
	add1 fa4_29_0 (c3[29][2], c3[29][1], c3[29][0], s4[29][0], c4[30][0]);

	add1 fa4_28_2 (s3[28][3], s3[28][2], s3[28][1], s4[28][2], c4[29][2]);
	add1 fa4_28_1 (s3[28][0], c2[28][0], c3[28][3], s4[28][1], c4[29][1]);
	add1 fa4_28_0 (c3[28][2], c3[28][1], c3[28][0], s4[28][0], c4[29][0]);

	add1 fa4_27_2 (s3[27][3], s3[27][2], s3[27][1], s4[27][2], c4[28][2]);
	add1 fa4_27_1 (s3[27][0], c2[27][0], c3[27][3], s4[27][1], c4[28][1]);
	add1 fa4_27_0 (c3[27][2], c3[27][1], c3[27][0], s4[27][0], c4[28][0]);

	add1 fa4_26_2 (s3[26][3], s3[26][2], s3[26][1], s4[26][2], c4[27][2]);
	add1 fa4_26_1 (s3[26][0], c3[26][3], c3[26][2], s4[26][1], c4[27][1]);
	add1 fa4_26_0 (c3[26][1], c3[26][0],       1'b0, s4[26][0], c4[27][0]);

	add1 fa4_25_2 (s3[25][3], s3[25][2], s3[25][1], s4[25][2], c4[26][2]);
	add1 fa4_25_1 (s3[25][0], c3[25][3], c3[25][2], s4[25][1], c4[26][1]);
	add1 fa4_25_0 (c3[25][1], c3[25][0],       1'b0, s4[25][0], c4[26][0]);

	add1 fa4_24_2 (s3[24][3], s3[24][2], s3[24][1], s4[24][2], c4[25][2]);
	add1 fa4_24_1 (s3[24][0], c3[24][3], c3[24][2], s4[24][1], c4[25][1]);
	add1 fa4_24_0 (c3[24][1], c3[24][0],       1'b0, s4[24][0], c4[25][0]);

	add1 fa4_23_1 (s3[23][3], s3[23][2], s3[23][1], s4[23][1], c4[24][1]);
	add1 fa4_23_0 (s3[23][0], c3[23][2], c3[23][1], s4[23][0], c4[24][0]);
	// index 23 : c3[23][0]

	add1 fa4_22_1 (s3[22][2], s3[22][1], s3[22][0], s4[22][1], c4[23][1]);
	add1 fa4_22_0 (c2[22][0], c3[22][2], c3[22][1], s4[22][0], c4[23][0]);
	// index 22 : c3[22][0]

	add1 fa4_21_1 (s3[21][2], s3[21][1], s3[21][0], s4[21][1], c4[22][1]);
	add1 fa4_21_0 (c2[21][0], c3[21][2], c3[21][1], s4[21][0], c4[22][0]);
	// index 21 : c3[21][0]

	add1 fa4_20_1 (s3[20][2], s3[20][1], s3[20][0], s4[20][1], c4[21][1]);
	add1 fa4_20_0 (c3[20][2], c3[20][1], c3[20][0], s4[20][0], c4[21][0]);

	add1 fa4_19_1 (s3[19][2], s3[19][1], s3[19][0], s4[19][1], c4[20][1]);
	add1 fa4_19_0 (c3[19][2], c3[19][1], c3[19][0], s4[19][0], c4[20][0]);

	add1 fa4_18_1 (s3[18][2], s3[18][1], s3[18][0], s4[18][1], c4[19][1]);
	add1 fa4_18_0 (c3[18][2], c3[18][1], c3[18][0], s4[18][0], c4[19][0]);

	add1 fa4_17_1 (s3[17][2], s3[17][1], s3[17][0], s4[17][1], c4[18][1]);
	add1 fa4_17_0 (c3[17][2], c3[17][1], c3[17][0], s4[17][0], c4[18][0]);

	add1 fa4_16_1 (s3[16][2], s3[16][1], s3[16][0], s4[16][1], c4[17][1]);
	add1 fa4_16_0 (c3[16][1], c3[16][0],       1'b0, s4[16][0], c4[17][0]);

	add1 fa4_15_1 (s3[15][1], s3[15][0], c2[15][0], s4[15][1], c4[16][1]);
	add1 fa4_15_0 (c3[15][1], c3[15][0],       1'b0, s4[15][0], c4[16][0]);

	add1 fa4_14_1 (s3[14][1], s3[14][0], c2[14][0], s4[14][1], c4[15][1]);
	add1 fa4_14_0 (c3[14][1], c3[14][0],       1'b0, s4[14][0], c4[15][0]);

	add1 fa4_13_0 (s3[13][1], s3[13][0], c3[13][1], s4[13][0], c4[14][0]);
	// index 13 : c3[13][0]

	add1 fa4_12_0 (s3[12][1], s3[12][0], c3[12][1], s4[12][0], c4[13][0]);
	// index 12 : c3[12][0]

	add1 fa4_11_0 (s3[11][1], s3[11][0], c3[11][1], s4[11][0], c4[12][0]);
	// index 11 : c3[11][0]

	add1 fa4_10_0 (s3[10][1], s3[10][0], c3[10][1], s4[10][0], c4[11][0]);
	// index 10 : c3[10][0]

	add1 fa4_9_0 (s3[9][1], s3[9][0], c3[9][0], s4[9][0], c4[10][0]);

	add1 fa4_8_0 (s3[8][0], c2[8][0], c3[8][0], s4[8][0], c4[9][0]);

	add1 fa4_7_0 (s3[7][0], c2[7][0], c3[7][0], s4[7][0], c4[8][0]);

	add1 fa4_6_0 (s3[6][0], c3[6][0],       1'b0, s4[6][0], c4[7][0]);

	add1 fa4_5_0 (s3[5][0], c3[5][0],       1'b0, s4[5][0], c4[6][0]);

	add1 fa4_4_0 (s3[4][0], c3[4][0],       1'b0, s4[4][0], c4[5][0]);

	assign s[4] = s4[4][0];

	// add-layer 5
	wire [1:0] s5[55:5];
	wire [1:0] c5[56:6];
	// index 62 : p[31][31], c1[62][0], c4[62][0]
    // index 61 : s4[61][0], c4[61][0]
	// index 60 : s4[60][0], c4[60][0]
	// index 59 : s4[59][0], c4[59][0]
	// index 58 : s4[58][0], c4[58][0]
	// index 57 : s4[57][0], c4[57][0]
	// index 56 : s4[56][0], c4[56][0]

	add1 fa5_55_0 (s4[55][0], c3[55][0], c4[55][0], s5[55][0], c5[56][0]);

	add1 fa5_54_0 (s4[54][0], c3[54][0], c4[54][0], s5[54][0], c5[55][0]);

	add1 fa5_53_0 (s4[53][0], c3[53][0], c4[53][0], s5[53][0], c5[54][0]);

	add1 fa5_52_0 (s4[52][0], c3[52][0], c4[52][0], s5[52][0], c5[53][0]);

	add1 fa5_51_0 (s4[51][0], c3[51][0], c4[51][1], s5[51][0], c5[52][0]);
	// index 51 : c4[51][0]

	add1 fa5_50_0 (s4[50][1], s4[50][0], c4[50][1], s5[50][0], c5[51][0]);
	// index 50 : c4[50][0]

	add1 fa5_49_0 (s4[49][1], s4[49][0], c4[49][1], s5[49][0], c5[50][0]);
	// index 49 : c4[49][0]

	add1 fa5_48_0 (s4[48][1], s4[48][0], c4[48][1], s5[48][0], c5[49][0]);
	// index 48 : c4[48][0]

	add1 fa5_47_0 (s4[47][1], s4[47][0], c4[47][1], s5[47][0], c5[48][0]);
	// index 47 : c4[47][0]

	add1 fa5_46_0 (s4[46][1], s4[46][0], c4[46][1], s5[46][0], c5[47][0]);
	// index 46 : c4[46][0]

	add1 fa5_45_0 (s4[45][1], s4[45][0], c4[45][1], s5[45][0], c5[46][0]);
	// index 45 : c4[45][0]

	add1 fa5_44_1 (s4[44][1], s4[44][0], c3[44][0], s5[44][1], c5[45][1]);
	add1 fa5_44_0 (c4[44][1], c4[44][0],       1'b0, s5[44][0], c5[45][0]);

	add1 fa5_43_1 (s4[43][1], s4[43][0], c3[43][0], s5[43][1], c5[44][1]);
	add1 fa5_43_0 (c4[43][2], c4[43][1], c4[43][0], s5[43][0], c5[44][0]);

	add1 fa5_42_1 (s4[42][2], s4[42][1], s4[42][0], s5[42][1], c5[43][1]);
	add1 fa5_42_0 (c4[42][2], c4[42][1], c4[42][0], s5[42][0], c5[43][0]);

	add1 fa5_41_1 (s4[41][2], s4[41][1], s4[41][0], s5[41][1], c5[42][1]);
	add1 fa5_41_0 (c4[41][2], c4[41][1], c4[41][0], s5[41][0], c5[42][0]);

	add1 fa5_40_1 (s4[40][2], s4[40][1], s4[40][0], s5[40][1], c5[41][1]);
	add1 fa5_40_0 (c4[40][2], c4[40][1], c4[40][0], s5[40][0], c5[41][0]);

	add1 fa5_39_1 (s4[39][2], s4[39][1], s4[39][0], s5[39][1], c5[40][1]);
	add1 fa5_39_0 (c4[39][2], c4[39][1], c4[39][0], s5[39][0], c5[40][0]);

	add1 fa5_38_1 (s4[38][2], s4[38][1], s4[38][0], s5[38][1], c5[39][1]);
	add1 fa5_38_0 (c4[38][2], c4[38][1], c4[38][0], s5[38][0], c5[39][0]);

	add1 fa5_37_1 (s4[37][2], s4[37][1], s4[37][0], s5[37][1], c5[38][1]);
	add1 fa5_37_0 (c4[37][2], c4[37][1], c4[37][0], s5[37][0], c5[38][0]);

	add1 fa5_36_1 (s4[36][2], s4[36][1], s4[36][0], s5[36][1], c5[37][1]);
	add1 fa5_36_0 (c3[36][0], c4[36][2], c4[36][1], s5[36][0], c5[37][0]);
	// index 36 : c4[36][0]

	add1 fa5_35_1 (s4[35][2], s4[35][1], s4[35][0], s5[35][1], c5[36][1]);
	add1 fa5_35_0 (c3[35][0], c4[35][2], c4[35][1], s5[35][0], c5[36][0]);
	// index 35 : c4[35][0]

	add1 fa5_34_1 (s4[34][2], s4[34][1], s4[34][0], s5[34][1], c5[35][1]);
	add1 fa5_34_0 (c3[34][0], c4[34][2], c4[34][1], s5[34][0], c5[35][0]);
	// index 34 : c4[34][0]

	add1 fa5_33_1 (s4[33][2], s4[33][1], s4[33][0], s5[33][1], c5[34][1]);
	add1 fa5_33_0 (c3[33][0], c4[33][2], c4[33][1], s5[33][0], c5[34][0]);
	// index 33 : c4[33][0]

	add1 fa5_32_1 (s4[32][2], s4[32][1], s4[32][0], s5[32][1], c5[33][1]);
	add1 fa5_32_0 (c3[32][0], c4[32][2], c4[32][1], s5[32][0], c5[33][0]);
	// index 32 : c4[32][0]

	add1 fa5_31_1 (s4[31][2], s4[31][1], s4[31][0], s5[31][1], c5[32][1]);
	add1 fa5_31_0 (c3[31][0], c4[31][2], c4[31][1], s5[31][0], c5[32][0]);
	// index 31 : c4[31][0]

	add1 fa5_30_1 (s4[30][2], s4[30][1], s4[30][0], s5[30][1], c5[31][1]);
	add1 fa5_30_0 (c4[30][2], c4[30][1], c4[30][0], s5[30][0], c5[31][0]);

	add1 fa5_29_1 (s4[29][2], s4[29][1], s4[29][0], s5[29][1], c5[30][1]);
	add1 fa5_29_0 (c4[29][2], c4[29][1], c4[29][0], s5[29][0], c5[30][0]);

	add1 fa5_28_1 (s4[28][2], s4[28][1], s4[28][0], s5[28][1], c5[29][1]);
	add1 fa5_28_0 (c4[28][2], c4[28][1], c4[28][0], s5[28][0], c5[29][0]);

	add1 fa5_27_1 (s4[27][2], s4[27][1], s4[27][0], s5[27][1], c5[28][1]);
	add1 fa5_27_0 (c4[27][2], c4[27][1], c4[27][0], s5[27][0], c5[28][0]);

	add1 fa5_26_1 (s4[26][2], s4[26][1], s4[26][0], s5[26][1], c5[27][1]);
	add1 fa5_26_0 (c4[26][2], c4[26][1], c4[26][0], s5[26][0], c5[27][0]);

	add1 fa5_25_1 (s4[25][2], s4[25][1], s4[25][0], s5[25][1], c5[26][1]);
	add1 fa5_25_0 (c4[25][2], c4[25][1], c4[25][0], s5[25][0], c5[26][0]);

	add1 fa5_24_1 (s4[24][2], s4[24][1], s4[24][0], s5[24][1], c5[25][1]);
	add1 fa5_24_0 (c4[24][1], c4[24][0],       1'b0, s5[24][0], c5[25][0]);

	add1 fa5_23_1 (s4[23][1], s4[23][0], c3[23][0], s5[23][1], c5[24][1]);
	add1 fa5_23_0 (c4[23][1], c4[23][0],       1'b0, s5[23][0], c5[24][0]);

	add1 fa5_22_1 (s4[22][1], s4[22][0], c3[22][0], s5[22][1], c5[23][1]);
	add1 fa5_22_0 (c4[22][1], c4[22][0],       1'b0, s5[22][0], c5[23][0]);

	add1 fa5_21_1 (s4[21][1], s4[21][0], c3[21][0], s5[21][1], c5[22][1]);
	add1 fa5_21_0 (c4[21][1], c4[21][0],       1'b0, s5[21][0], c5[22][0]);

	add1 fa5_20_0 (s4[20][1], s4[20][0], c4[20][1], s5[20][0], c5[21][0]);
	// index 20 : c4[20][0]

	add1 fa5_19_0 (s4[19][1], s4[19][0], c4[19][1], s5[19][0], c5[20][0]);
	// index 19 : c4[19][0]

	add1 fa5_18_0 (s4[18][1], s4[18][0], c4[18][1], s5[18][0], c5[19][0]);
	// index 18 : c4[18][0]

	add1 fa5_17_0 (s4[17][1], s4[17][0], c4[17][1], s5[17][0], c5[18][0]);
	// index 17 : c4[17][0]

	add1 fa5_16_0 (s4[16][1], s4[16][0], c4[16][1], s5[16][0], c5[17][0]);
	// index 16 : c4[16][0]

	add1 fa5_15_0 (s4[15][1], s4[15][0], c4[15][1], s5[15][0], c5[16][0]);
	// index 15 : c4[15][0]

	add1 fa5_14_0 (s4[14][1], s4[14][0], c4[14][0], s5[14][0], c5[15][0]);

	add1 fa5_13_0 (s4[13][0], c3[13][0], c4[13][0], s5[13][0], c5[14][0]);

	add1 fa5_12_0 (s4[12][0], c3[12][0], c4[12][0], s5[12][0], c5[13][0]);

	add1 fa5_11_0 (s4[11][0], c3[11][0], c4[11][0], s5[11][0], c5[12][0]);

	add1 fa5_10_0 (s4[10][0], c3[10][0], c4[10][0], s5[10][0], c5[11][0]);

	add1 fa5_9_0 (s4[9][0], c4[9][0],       1'b0, s5[9][0], c5[10][0]);

	add1 fa5_8_0 (s4[8][0], c4[8][0],       1'b0, s5[8][0], c5[9][0]);

	add1 fa5_7_0 (s4[7][0], c4[7][0],       1'b0, s5[7][0], c5[8][0]);

	add1 fa5_6_0 (s4[6][0], c4[6][0],       1'b0, s5[6][0], c5[7][0]);

	add1 fa5_5_0 (s4[5][0], c4[5][0],       1'b0, s5[5][0], c5[6][0]);

	assign s[5] = s5[5][0];

	// add-layer 6
	wire [1:0] s6[51:6];
	wire [1:0] c6[52:7];
	// index 62 : p[31][31], c1[62][0], c4[62][0]
    // index 61 : s4[61][0], c4[61][0]
	// index 60 : s4[60][0], c4[60][0]
	// index 59 : s4[59][0], c4[59][0]
	// index 58 : s4[58][0], c4[58][0]
	// index 57 : s4[57][0], c4[57][0]
	// index 56 : s4[56][0], c4[56][0],  c5[56][0]
	// index 55 : s5[55][0], c5[55][0]
	// index 54 : s5[54][0], c5[54][0]
	// index 53 : s5[53][0], c5[53][0]
	// index 52 : s5[52][0], c5[52][0]

	add1 fa6_51_0 (s5[51][0], c4[51][0], c5[51][0], s6[51][0], c6[52][0]);

	add1 fa6_50_0 (s5[50][0], c4[50][0], c5[50][0], s6[50][0], c6[51][0]);

	add1 fa6_49_0 (s5[49][0], c4[49][0], c5[49][0], s6[49][0], c6[50][0]);

	add1 fa6_48_0 (s5[48][0], c4[48][0], c5[48][0], s6[48][0], c6[49][0]);

	add1 fa6_47_0 (s5[47][0], c4[47][0], c5[47][0], s6[47][0], c6[48][0]);

	add1 fa6_46_0 (s5[46][0], c4[46][0], c5[46][0], s6[46][0], c6[47][0]);

	add1 fa6_45_0 (s5[45][0], c4[45][0], c5[45][1], s6[45][0], c6[46][0]);
	// index 45 : c5[45][0]

	add1 fa6_44_0 (s5[44][1], s5[44][0], c5[44][1], s6[44][0], c6[45][0]);
	// index 44 : c5[44][0]

	add1 fa6_43_0 (s5[43][1], s5[43][0], c5[43][1], s6[43][0], c6[44][0]);
	// index 43 : c5[43][0]

	add1 fa6_42_0 (s5[42][1], s5[42][0], c5[42][1], s6[42][0], c6[43][0]);
	// index 42 : c5[42][0]

	add1 fa6_41_0 (s5[41][1], s5[41][0], c5[41][1], s6[41][0], c6[42][0]);
	// index 41 : c5[41][0]

	add1 fa6_40_0 (s5[40][1], s5[40][0], c5[40][1], s6[40][0], c6[41][0]);
	// index 40 : c5[40][0]

	add1 fa6_39_0 (s5[39][1], s5[39][0], c5[39][1], s6[39][0], c6[40][0]);
	// index 39 : c5[39][0]

	add1 fa6_38_0 (s5[38][1], s5[38][0], c5[38][1], s6[38][0], c6[39][0]);
	// index 38 : c5[38][0]

	add1 fa6_37_0 (s5[37][1], s5[37][0], c5[37][1], s6[37][0], c6[38][0]);
	// index 37 : c5[37][0]

	add1 fa6_36_1 (s5[36][1], s5[36][0], c4[36][0], s6[36][1], c6[37][1]);
	add1 fa6_36_0 (c5[36][1], c5[36][0],       1'b0, s6[36][0], c6[37][0]);

	add1 fa6_35_1 (s5[35][1], s5[35][0], c4[35][0], s6[35][1], c6[36][1]);
	add1 fa6_35_0 (c5[35][1], c5[35][0],       1'b0, s6[35][0], c6[36][0]);

	add1 fa6_34_1 (s5[34][1], s5[34][0], c4[34][0], s6[34][1], c6[35][1]);
	add1 fa6_34_0 (c5[34][1], c5[34][0],       1'b0, s6[34][0], c6[35][0]);

	add1 fa6_33_1 (s5[33][1], s5[33][0], c4[33][0], s6[33][1], c6[34][1]);
	add1 fa6_33_0 (c5[33][1], c5[33][0],       1'b0, s6[33][0], c6[34][0]);

	add1 fa6_32_1 (s5[32][1], s5[32][0], c4[32][0], s6[32][1], c6[33][1]);
	add1 fa6_32_0 (c5[32][1], c5[32][0],       1'b0, s6[32][0], c6[33][0]);

	add1 fa6_31_1 (s5[31][1], s5[31][0], c4[31][0], s6[31][1], c6[32][1]);
	add1 fa6_31_0 (c5[31][1], c5[31][0],       1'b0, s6[31][0], c6[32][0]);

	add1 fa6_30_0 (s5[30][1], s5[30][0], c5[30][1], s6[30][0], c6[31][0]);
	// index 30 : c5[30][0]

	add1 fa6_29_0 (s5[29][1], s5[29][0], c5[29][1], s6[29][0], c6[30][0]);
	// index 29 : c5[29][0]

	add1 fa6_28_0 (s5[28][1], s5[28][0], c5[28][1], s6[28][0], c6[29][0]);
	// index 28 : c5[28][0]

	add1 fa6_27_0 (s5[27][1], s5[27][0], c5[27][1], s6[27][0], c6[28][0]);
	// index 27 : c5[27][0]

	add1 fa6_26_0 (s5[26][1], s5[26][0], c5[26][1], s6[26][0], c6[27][0]);
	// index 26 : c5[26][0]

	add1 fa6_25_0 (s5[25][1], s5[25][0], c5[25][1], s6[25][0], c6[26][0]);
	// index 25 : c5[25][0]

	add1 fa6_24_0 (s5[24][1], s5[24][0], c5[24][1], s6[24][0], c6[25][0]);
	// index 24 : c5[24][0]

	add1 fa6_23_0 (s5[23][1], s5[23][0], c5[23][1], s6[23][0], c6[24][0]);
	// index 23 : c5[23][0]

	add1 fa6_22_0 (s5[22][1], s5[22][0], c5[22][1], s6[22][0], c6[23][0]);
	// index 22 : c5[22][0]

	add1 fa6_21_0 (s5[21][1], s5[21][0], c5[21][0], s6[21][0], c6[22][0]);

	add1 fa6_20_0 (s5[20][0], c4[20][0], c5[20][0], s6[20][0], c6[21][0]);

	add1 fa6_19_0 (s5[19][0], c4[19][0], c5[19][0], s6[19][0], c6[20][0]);

	add1 fa6_18_0 (s5[18][0], c4[18][0], c5[18][0], s6[18][0], c6[19][0]);

	add1 fa6_17_0 (s5[17][0], c4[17][0], c5[17][0], s6[17][0], c6[18][0]);

	add1 fa6_16_0 (s5[16][0], c4[16][0], c5[16][0], s6[16][0], c6[17][0]);

	add1 fa6_15_0 (s5[15][0], c4[15][0], c5[15][0], s6[15][0], c6[16][0]);

	add1 fa6_14_0 (s5[14][0], c5[14][0],       1'b0, s6[14][0], c6[15][0]);

	add1 fa6_13_0 (s5[13][0], c5[13][0],       1'b0, s6[13][0], c6[14][0]);

	add1 fa6_12_0 (s5[12][0], c5[12][0],       1'b0, s6[12][0], c6[13][0]);

	add1 fa6_11_0 (s5[11][0], c5[11][0],       1'b0, s6[11][0], c6[12][0]);

	add1 fa6_10_0 (s5[10][0], c5[10][0],       1'b0, s6[10][0], c6[11][0]);

	add1 fa6_9_0 (s5[9][0], c5[9][0],       1'b0, s6[9][0], c6[10][0]);

	add1 fa6_8_0 (s5[8][0], c5[8][0],       1'b0, s6[8][0], c6[9][0]);

	add1 fa6_7_0 (s5[7][0], c5[7][0],       1'b0, s6[7][0], c6[8][0]);

	add1 fa6_6_0 (s5[6][0], c5[6][0],       1'b0, s6[6][0], c6[7][0]);

	assign s[6] = s6[6][0];

	// add-layer 7
	wire [45:7] s7;
	wire [46:8] c7;
	
	// index 62 : p[31][31], c1[62][0], c4[62][0]
    // index 61 : s4[61][0], c4[61][0]
	// index 60 : s4[60][0], c4[60][0]
	// index 59 : s4[59][0], c4[59][0]
	// index 58 : s4[58][0], c4[58][0]
	// index 57 : s4[57][0], c4[57][0]
	// index 56 : s4[56][0], c4[56][0], c5[56][0]
	// index 55 : s5[55][0], c5[55][0]
	// index 54 : s5[54][0], c5[54][0]
	// index 53 : s5[53][0], c5[53][0]
	// index 52 : s5[52][0], c5[52][0], c6[52][0]
	// index 51 : s6[51][0], c6[51][0]
	// index 50 : s6[50][0], c6[50][0]
	// index 49 : s6[49][0], c6[49][0]
	// index 48 : s6[48][0], c6[48][0]
	// index 47 : s6[47][0], c6[47][0]
	// index 46 : s6[46][0], c6[46][0]

	add1 fa7_45_0 (s6[45][0], c5[45][0], c6[45][0], s7[45], c7[46]);
	add1 fa7_44_0 (s6[44][0], c5[44][0], c6[44][0], s7[44], c7[45]);
	add1 fa7_43_0 (s6[43][0], c5[43][0], c6[43][0], s7[43], c7[44]);
	add1 fa7_42_0 (s6[42][0], c5[42][0], c6[42][0], s7[42], c7[43]);
	add1 fa7_41_0 (s6[41][0], c5[41][0], c6[41][0], s7[41], c7[42]);
	add1 fa7_40_0 (s6[40][0], c5[40][0], c6[40][0], s7[40], c7[41]);
	add1 fa7_39_0 (s6[39][0], c5[39][0], c6[39][0], s7[39], c7[40]);
	add1 fa7_38_0 (s6[38][0], c5[38][0], c6[38][0], s7[38], c7[39]);
	add1 fa7_37_0 (s6[37][0], c5[37][0], c6[37][1], s7[37], c7[38]);
	// index 37 : c6[37][0]
	add1 fa7_36_0 (s6[36][1], s6[36][0], c6[36][1], s7[36], c7[37]);
	// index 36 : c6[36][0]
	add1 fa7_35_0 (s6[35][1], s6[35][0], c6[35][1], s7[35], c7[36]);
	// index 35 : c6[35][0]
	add1 fa7_34_0 (s6[34][1], s6[34][0], c6[34][1], s7[34], c7[35]);
	// index 34 : c6[34][0]
	add1 fa7_33_0 (s6[33][1], s6[33][0], c6[33][1], s7[33], c7[34]);
	// index 33 : c6[33][0]
	add1 fa7_32_0 (s6[32][1], s6[32][0], c6[32][1], s7[32], c7[33]);
	// index 32 : c6[32][0]
	add1 fa7_31_0 (s6[31][1], s6[31][0], c6[31][0], s7[31], c7[32]);
	add1 fa7_30_0 (s6[30][0], c5[30][0], c6[30][0], s7[30], c7[31]);
	add1 fa7_29_0 (s6[29][0], c5[29][0], c6[29][0], s7[29], c7[30]);
	add1 fa7_28_0 (s6[28][0], c5[28][0], c6[28][0], s7[28], c7[29]);
	add1 fa7_27_0 (s6[27][0], c5[27][0], c6[27][0], s7[27], c7[28]);
	add1 fa7_26_0 (s6[26][0], c5[26][0], c6[26][0], s7[26], c7[27]);
	add1 fa7_25_0 (s6[25][0], c5[25][0], c6[25][0], s7[25], c7[26]);
	add1 fa7_24_0 (s6[24][0], c5[24][0], c6[24][0], s7[24], c7[25]);
	add1 fa7_23_0 (s6[23][0], c5[23][0], c6[23][0], s7[23], c7[24]);
	add1 fa7_22_0 (s6[22][0], c5[22][0], c6[22][0], s7[22], c7[23]);
	add1 fa7_21_0 (s6[21][0], c6[21][0],      1'b0, s7[21], c7[22]);
	add1 fa7_20_0 (s6[20][0], c6[20][0],      1'b0, s7[20], c7[21]);
	add1 fa7_19_0 (s6[19][0], c6[19][0],      1'b0, s7[19], c7[20]);
	add1 fa7_18_0 (s6[18][0], c6[18][0],      1'b0, s7[18], c7[19]);
	add1 fa7_17_0 (s6[17][0], c6[17][0],      1'b0, s7[17], c7[18]);
	add1 fa7_16_0 (s6[16][0], c6[16][0],      1'b0, s7[16], c7[17]);
	add1 fa7_15_0 (s6[15][0], c6[15][0],      1'b0, s7[15], c7[16]);
	add1 fa7_14_0 (s6[14][0], c6[14][0],      1'b0, s7[14], c7[15]);
	add1 fa7_13_0 (s6[13][0], c6[13][0],      1'b0, s7[13], c7[14]);
	add1 fa7_12_0 (s6[12][0], c6[12][0],      1'b0, s7[12], c7[13]);
	add1 fa7_11_0 (s6[11][0], c6[11][0],      1'b0, s7[11], c7[12]);
	add1 fa7_10_0 (s6[10][0], c6[10][0],      1'b0, s7[10], c7[11]);
	add1 fa7_9_0  ( s6[9][0],  c6[9][0],      1'b0, s7[9], c7[10]);
	add1 fa7_8_0  ( s6[8][0],  c6[8][0],      1'b0, s7[8], c7[9]);
	add1 fa7_7_0  ( s6[7][0],  c6[7][0],      1'b0, s7[7], c7[8]);

	assign s[7] = s7[7];

	// add-layer 8
	wire [62:8] s8;
	wire [63:9] c8;
	add1 fa8_62_0 (p[31][31], c1[62][0], c4[62][0], s8[62], c8[63]);
	add1 fa8_61_0 (s4[61][0], c4[61][0],      1'b0, s8[61], c8[62]);
	add1 fa8_60_0 (s4[60][0], c4[60][0],      1'b0, s8[60], c8[61]);
	add1 fa8_59_0 (s4[59][0], c4[59][0],      1'b0, s8[59], c8[60]);
	add1 fa8_58_0 (s4[58][0], c4[58][0],      1'b0, s8[58], c8[59]);
	add1 fa8_57_0 (s4[57][0], c4[57][0],      1'b0, s8[57], c8[58]);
	add1 fa8_56_0 (s4[56][0], c4[56][0], c5[56][0], s8[56], c8[57]);
	add1 fa8_55_0 (s5[55][0], c5[55][0],      1'b0, s8[55], c8[56]);
	add1 fa8_54_0 (s5[54][0], c5[54][0],      1'b0, s8[54], c8[55]);
	add1 fa8_53_0 (s5[53][0], c5[53][0],      1'b0, s8[53], c8[54]);
	add1 fa8_52_0 (s5[52][0], c5[52][0], c6[52][0], s8[52], c8[53]);
	add1 fa8_51_0 (s6[51][0], c6[51][0],      1'b0, s8[51], c8[52]);
	add1 fa8_50_0 (s6[50][0], c6[50][0],      1'b0, s8[50], c8[51]);
	add1 fa8_49_0 (s6[49][0], c6[49][0],      1'b0, s8[49], c8[50]);
	add1 fa8_48_0 (s6[48][0], c6[48][0],      1'b0, s8[48], c8[49]);
	add1 fa8_47_0 (s6[47][0], c6[47][0],      1'b0, s8[47], c8[48]);
	add1 fa8_46_0 (s6[46][0], c6[46][0],    c7[46], s8[46], c8[47]);
	add1 fa8_45_0 (s7[45], c7[45],       1'b0, s8[45], c8[46]);
	add1 fa8_44_0 (s7[44], c7[44],       1'b0, s8[44], c8[45]);
	add1 fa8_43_0 (s7[43], c7[43],       1'b0, s8[43], c8[44]);
	add1 fa8_42_0 (s7[42], c7[42],       1'b0, s8[42], c8[43]);
	add1 fa8_41_0 (s7[41], c7[41],       1'b0, s8[41], c8[42]);
	add1 fa8_40_0 (s7[40], c7[40],       1'b0, s8[40], c8[41]);
	add1 fa8_39_0 (s7[39], c7[39],       1'b0, s8[39], c8[40]);
	add1 fa8_38_0 (s7[38], c7[38],       1'b0, s8[38], c8[39]);
	add1 fa8_37_0 (s7[37], c6[37][0], c7[37], s8[37], c8[38]);
	add1 fa8_36_0 (s7[36], c6[36][0], c7[36], s8[36], c8[37]);
	add1 fa8_35_0 (s7[35], c6[35][0], c7[35], s8[35], c8[36]);
	add1 fa8_34_0 (s7[34], c6[34][0], c7[34], s8[34], c8[35]);
	add1 fa8_33_0 (s7[33], c6[33][0], c7[33], s8[33], c8[34]);
	add1 fa8_32_0 (s7[32], c6[32][0], c7[32], s8[32], c8[33]);
	add1 fa8_31_0 (s7[31], c7[31],       1'b0, s8[31], c8[32]);
	add1 fa8_30_0 (s7[30], c7[30],       1'b0, s8[30], c8[31]);
	add1 fa8_29_0 (s7[29], c7[29],       1'b0, s8[29], c8[30]);
	add1 fa8_28_0 (s7[28], c7[28],       1'b0, s8[28], c8[29]);
	add1 fa8_27_0 (s7[27], c7[27],       1'b0, s8[27], c8[28]);
	add1 fa8_26_0 (s7[26], c7[26],       1'b0, s8[26], c8[27]);
	add1 fa8_25_0 (s7[25], c7[25],       1'b0, s8[25], c8[26]);
	add1 fa8_24_0 (s7[24], c7[24],       1'b0, s8[24], c8[25]);
	add1 fa8_23_0 (s7[23], c7[23],       1'b0, s8[23], c8[24]);
	add1 fa8_22_0 (s7[22], c7[22],       1'b0, s8[22], c8[23]);
	add1 fa8_21_0 (s7[21], c7[21],       1'b0, s8[21], c8[22]);
	add1 fa8_20_0 (s7[20], c7[20],       1'b0, s8[20], c8[21]);
	add1 fa8_19_0 (s7[19], c7[19],       1'b0, s8[19], c8[20]);
	add1 fa8_18_0 (s7[18], c7[18],       1'b0, s8[18], c8[19]);
	add1 fa8_17_0 (s7[17], c7[17],       1'b0, s8[17], c8[18]);
	add1 fa8_16_0 (s7[16], c7[16],       1'b0, s8[16], c8[17]);
	add1 fa8_15_0 (s7[15], c7[15],       1'b0, s8[15], c8[16]);
	add1 fa8_14_0 (s7[14], c7[14],       1'b0, s8[14], c8[15]);
	add1 fa8_13_0 (s7[13], c7[13],       1'b0, s8[13], c8[14]);
	add1 fa8_12_0 (s7[12], c7[12],       1'b0, s8[12], c8[13]);
	add1 fa8_11_0 (s7[11], c7[11],       1'b0, s8[11], c8[12]);
	add1 fa8_10_0 (s7[10], c7[10],       1'b0, s8[10], c8[11]);
	add1 fa8_9_0  ( s7[9],  c7[9],       1'b0,  s8[9], c8[10]);
	add1 fa8_8_0  ( s7[8],  c7[8],       1'b0,  s8[8],  c8[9]);

	assign s[8] = s8[8];
	
	assign s[63:9] = {1'b0, s8[62:9]} + c8[63:9];

endmodule
