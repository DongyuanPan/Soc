`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2017/08/12 13:27:53
// Design Name: 
// Module Name: wallace_tree8_signed
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module wallace_tree8_signed (a, b, z);
    
    input [7:0] a, b;
    output [15:0] z;
    reg [7:0] p[7:0];
    
    integer i, j;
    always @ * begin
        for (i = 0; i < 7; i = i + 1)
           for (j = 0; j < 7; j = j + 1)
                p[i][j] = a[i] & b[j];
                
        for (i = 0; i < 7; i = i + 1)
            p[i][7] = ~(a[i] & b[7]);
            
         for (j = 0; j < 7; j = j + 1)
            p[7][j] = ~(a[7] & b[j]);
            
         p[7][7] = a[7] & b[7];
    end
    
    assign z[0] = p[0][0];
    
    // add-layer 1 
    wire [2:0] s1[12:01];
    wire [2:0] c1[13:02];
    // index 14 : p[7][7]
    // index 13 : p[7][6], p[6][7]
    add1 fa1_12_0 (p[7][5], p[6][6], p[5][7], s1[12][0], c1[13][0]);
    add1 fa1_11_0 (p[7][4], p[6][5], p[5][6], s1[11][0], c1[12][0]);
    // index 11 : p[4][7]
    add1 fa1_10_1 (p[7][3], p[6][4], p[5][5], s1[10][1], c1[11][1]);
    add1 fa1_10_0 (p[4][6], p[3][7],    1'b0, s1[10][0], c1[11][0]);
    add1 fa1_09_1 (p[7][2], p[6][3], p[5][4], s1[09][1], c1[10][1]);
    add1 fa1_09_0 (p[4][5], p[3][6], p[2][7], s1[09][0], c1[10][0]);
    add1 fal_08_2 (p[7][1], p[6][2], p[5][3], s1[08][2], c1[09][2]);
    add1 fa1_08_1 (p[4][4], p[3][5], p[2][6], s1[08][1], c1[09][1]);
    add1 fa1_08_0 (p[1][7],    1'b1,    1'b0, s1[08][0], c1[09][0]);
    add1 fa1_07_2 (p[7][0], p[6][1], p[5][2], s1[07][2], c1[08][2]);
    add1 fa1_07_1 (p[4][3], p[3][4], p[2][5], s1[07][1], c1[08][1]);
    add1 fa1_07_0 (p[1][6], p[0][7],    1'b0, s1[07][0], c1[08][0]);
    add1 fa1_06_1 (p[6][0], p[5][1], p[4][2], s1[06][1], c1[07][1]);
    add1 fa1_06_0 (p[3][3], p[2][4], p[1][5], s1[06][0], c1[07][0]);
    // index 06 : p[0][6]
    add1 fa1_05_1 (p[5][0], p[4][1], p[3][2], s1[05][1], c1[06][1]);
    add1 fa1_05_0 (p[2][3], p[1][4], p[0][5], s1[05][0], c1[06][0]);
    add1 fa1_04_1 (p[4][0], p[3][1], p[2][2], s1[04][1], c1[05][1]);
    add1 fa1_04_0 (p[1][3], p[0][4],    1'b0, s1[04][0], c1[05][0]);
    add1 fa1_03_0 (p[3][0], p[2][1], p[1][2], s1[03][0], c1[04][0]);
    // index 03 : p[0][3]
    add1 fa1_02_0 (p[2][0], p[1][1], p[0][2], s1[02][0], c1[03][0]);
    add1 fa1_01_0 (p[1][0], p[0][1],    1'b0, s1[01][0], c1[02][0]);
    assign z[1] = s1[01][0];
    
    // add-layer 2
    wire [1:0] s2[13:02];
    wire [1:0] c2[14:03];
    // index 14 : p[7][7]
    add1 fa2_13_0 (  p[7][6],   p[6][7], c1[13][0], s2[13][0], c2[14][0]);
    add1 fa2_12_0 (s1[12][0], c1[12][0],      1'b0, s2[12][0], c2[13][0]);
    add1 fa2_11_0 (s1[11][0],   p[4][7], c1[11][1], s2[11][0], c2[12][0]);
    // index 11 : c1[11][0]
    add1 fa2_10_0 (s1[10][1], s1[10][0], c1[10][1], s2[10][0], c2[11][0]);
    // index 10 : c1[10][0]
    add1 fa2_09_1 (s1[09][1], s1[09][0], c1[09][2], s2[09][1], c2[10][1]);
    add1 fa2_09_0 (c1[09][1], c1[09][0],      1'b0, s2[09][0], c2[10][0]);
    add1 fa2_08_1 (s1[08][2], s1[08][1], s1[08][0], s2[08][1], c2[09][1]);
    add1 fa2_08_0 (c1[08][2], c1[08][1], c1[08][0], s2[08][0], c2[09][0]);
    add1 fa2_07_1 (s1[07][2], s1[07][1], s1[07][0], s2[07][1], c2[08][1]);
    add1 fa2_07_0 (c1[07][1], c1[07][0],      1'b0, s2[07][0], c2[08][0]);
    add1 fa2_06_1 (s1[06][1], s1[06][0],   p[0][6], s2[06][1], c2[07][1]);
    add1 fa2_06_0 (c1[06][1], c1[06][0],      1'b0, s2[06][0], c2[07][0]);
    add1 fa2_05_0 (s1[05][1], s1[05][0], c1[05][1], s2[05][0], c2[06][0]);
    // index 05 : c1[05][0]
    add1 fa2_04_0 (s1[04][1], s1[04][0], c1[04][0], s2[04][0], c2[05][0]);
    add1 fa2_03_0 (s1[03][0],   p[0][3], c1[03][0], s2[03][0], c2[04][0]);
    add1 fa2_02_0 (s1[02][0], c1[02][0],      1'b0, s2[02][0], c2[03][0]);
    assign z[2] = s2[02][0];
    
    // add-layer 3
    wire [11:03] s3;
    wire [12:04] c3;
    // index 14 : p[7][7], c2[14][0]
    // index 13 : s2[13][0], c2[13][0]
    // index 12 : s2[12][0], c2[12][0]
    add1 fa3_11_0 (s2[11][0], c1[11][0], c2[11][0], s3[11], c3[12]);
    add1 fa3_10_0 (s2[10][0], c1[10][0], c2[10][1], s3[10], c3[11]);
    // index 10 : c2[10][0]
    add1 fa3_09_0 (s2[09][1], s2[09][0], c2[09][1], s3[09], c3[10]);
    // index 09 : c2[09][0]
    add1 fa3_08_0 (s2[08][1], s2[08][0], c2[08][1], s3[08], c3[09]);
    // index c2[08][0]
    add1 fa3_07_0 (s2[07][1], s2[07][0], c2[07][1], s3[07], c3[08]);
    // index 07 : c2[07][0]
    add1 fa3_06_0 (s2[06][1], s2[06][0], c2[06][0], s3[06], c3[07]);
    add1 fa3_05_0 (s2[05][0], c1[05][0], c2[05][0], s3[05], c3[06]);
    add1 fa3_04_0 (s2[04][0], c2[04][0],      1'b0, s3[04], c3[05]);
    add1 fa3_03_0 (s2[03][0], c2[03][0],      1'b0, s3[03], c3[04]);
    assign z[3] = s3[03];
    
    // add-layer 4
    wire [14:04] s4;
    wire [15:05] c4;
    add1 fa4_14_0 (  p[7][7], c2[14][0],   1'b0, s4[14], c4[15]);
    add1 fa4_13_0 (s2[13][0], c2[13][0],   1'b0, s4[13], c4[14]);
    add1 fa4_12_0 (s2[12][0], c2[12][0], c3[12], s4[12], c4[13]);
    add1 fa4_11_0 (   s3[11],    c3[11],   1'b0, s4[11], c4[12]);
    add1 fa4_10_0 (   s3[10], c2[10][0], c3[10], s4[10], c4[11]);
    add1 fa4_09_0 (   s3[09], c2[09][0], c3[09], s4[09], c4[10]);
    add1 fa4_08_0 (   s3[08], c2[08][0], c3[08], s4[08], c4[09]);
    add1 fa4_07_0 (   s3[07], c2[07][0], c3[07], s4[07], c4[08]);
    add1 fa4_06_0 (   s3[06],    c3[06],   1'b0, s4[06], c4[07]);
    add1 fa4_05_0 (   s3[05],    c3[05],   1'b0, s4[05], c4[06]);
    add1 fa4_04_0 (   s3[04],    c3[04],   1'b0, s4[04], c4[05]);
    assign z[4] = s4[04];
    
    assign z[15:5] = {1'b1, s4[14:05]} + c4[15:05];
    
endmodule
